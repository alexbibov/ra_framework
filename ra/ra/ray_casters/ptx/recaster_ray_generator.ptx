//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_60
.address_size 64

	// .globl	_Z15__ra_generate__v
.global .align 4 .b8 ra_entry_node[4];
.global .align 4 .u32 dimension;
.global .align 4 .u32 payload_type;
.global .align 4 .u32 ray_type;
.global .align 4 .f32 ray_parametric_length;
.global .align 4 .b8 problem_size[12];
.global .align 4 .u32 index;
.global .align 1 .b8 traverse_backup_buffer[1];
.global .align 1 .b8 ra_radiance_payload_1d_out[1];
.global .align 1 .b8 ra_radiance_payload_2d_out[1];
.global .align 1 .b8 ra_radiance_payload_3d_out[1];
.global .align 1 .b8 ra_radiance_payload_simple_1d_out[1];
.global .align 1 .b8 ra_radiance_payload_simple_2d_out[1];
.global .align 1 .b8 ra_radiance_payload_simple_3d_out[1];
.global .align 1 .b8 ra_radiance_payload_monochromatic_1d_out[1];
.global .align 1 .b8 ra_radiance_payload_monochromatic_2d_out[1];
.global .align 1 .b8 ra_radiance_payload_monochromatic_3d_out[1];
.global .align 1 .b8 ra_occlusion_payload_1d_out[1];
.global .align 1 .b8 ra_occlusion_payload_2d_out[1];
.global .align 1 .b8 ra_occlusion_payload_3d_out[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo13ra_entry_nodeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9dimensionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12payload_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8ray_typeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21ray_parametric_lengthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12problem_sizeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename13ra_entry_nodeE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9dimensionE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12payload_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename8ray_typeE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename21ray_parametric_lengthE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12problem_sizeE[6] = {117, 105, 110, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename5indexE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum13ra_entry_nodeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9dimensionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12payload_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8ray_typeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum21ray_parametric_lengthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12problem_sizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5indexE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic13ra_entry_nodeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9dimensionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12payload_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8ray_typeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic21ray_parametric_lengthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12problem_sizeE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic5indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation13ra_entry_nodeE[19] = {34, 83, 99, 101, 110, 101, 32, 101, 110, 116, 114, 121, 32, 110, 111, 100, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation9dimensionE[33] = {34, 68, 105, 109, 101, 110, 115, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 111, 117, 116, 112, 117, 116, 32, 98, 117, 102, 102, 101, 114, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation12payload_typeE[18] = {34, 84, 121, 112, 101, 32, 111, 102, 32, 112, 97, 121, 108, 111, 97, 100, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation8ray_typeE[26] = {34, 84, 121, 112, 101, 32, 111, 102, 32, 114, 101, 108, 97, 117, 110, 99, 104, 101, 100, 32, 114, 97, 121, 115, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation21ray_parametric_lengthE[36] = {34, 80, 97, 114, 97, 109, 101, 116, 114, 105, 99, 32, 108, 101, 110, 103, 116, 104, 32, 111, 102, 32, 114, 101, 99, 97, 115, 116, 101, 100, 32, 114, 97, 121, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation12problem_sizeE[31] = {34, 79, 114, 105, 103, 105, 110, 97, 108, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 112, 114, 111, 98, 108, 101, 109, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation5indexE[15] = {34, 84, 104, 114, 101, 97, 100, 32, 105, 110, 100, 101, 120, 34, 0};

.visible .entry _Z15__ra_generate__v(

)
{
	.local .align 16 .b8 	__local_depot0[528];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<18>;
	.reg .f32 	%f<110>;
	.reg .b32 	%r<178>;
	.reg .b64 	%rd<491>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.global.u32 	%r28, [index];
	mad.lo.s32 	%r29, %r28, 9, 1;
	cvt.u64.u32	%rd6, %r29;
	mov.u64 	%rd58, traverse_backup_buffer;
	cvta.global.u64 	%rd5, %rd58;
	mov.u32 	%r25, 1;
	mov.u32 	%r26, 4;
	mov.u64 	%rd57, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd6, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r5, [%rd4];
	// inline asm
	mov.b32 	%f8, %r5;
	// inline asm
	ld.global.u32 	%r30, [index];
	mad.lo.s32 	%r31, %r30, 9, 2;
	cvt.u64.u32	%rd12, %r31;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd12, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r8, [%rd10];
	// inline asm
	mov.b32 	%f9, %r8;
	// inline asm
	ld.global.u32 	%r32, [index];
	mad.lo.s32 	%r33, %r32, 9, 3;
	cvt.u64.u32	%rd18, %r33;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd18, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r11, [%rd16];
	// inline asm
	mov.b32 	%f10, %r11;
	// inline asm
	ld.global.u32 	%r34, [index];
	mad.lo.s32 	%r35, %r34, 9, 4;
	cvt.u64.u32	%rd24, %r35;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd24, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r14, [%rd22];
	// inline asm
	mov.b32 	%f11, %r14;
	// inline asm
	ld.global.u32 	%r36, [index];
	mad.lo.s32 	%r37, %r36, 9, 5;
	cvt.u64.u32	%rd30, %r37;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd30, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r17, [%rd28];
	// inline asm
	mov.b32 	%f12, %r17;
	// inline asm
	ld.global.u32 	%r38, [index];
	mad.lo.s32 	%r39, %r38, 9, 6;
	cvt.u64.u32	%rd36, %r39;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd36, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r20, [%rd34];
	// inline asm
	mov.b32 	%f13, %r20;
	// inline asm
	ld.global.u32 	%r40, [index];
	mad.lo.s32 	%r41, %r40, 9, 7;
	cvt.u64.u32	%rd42, %r41;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd42, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%r1, [%rd40];
	cvt.u64.u32	%rd1, %r1;
	ld.global.u32 	%r42, [index];
	mad.lo.s32 	%r43, %r42, 9, 8;
	cvt.u64.u32	%rd48, %r43;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd48, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%rd2, [%rd46];
	ld.global.u32 	%r44, [index];
	mad.lo.s32 	%r45, %r44, 9, 9;
	cvt.u64.u32	%rd54, %r45;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd5, %r25, %r26, %rd54, %rd57, %rd57, %rd57);
	// inline asm
	ld.u32 	%rd3, [%rd52];
	ld.global.u32 	%r2, [ray_type];
	ld.global.f32 	%f7, [ray_parametric_length];
	ld.global.u32 	%r27, [payload_type];
	setp.gt.s32	%p1, %r27, 1;
	@%p1 bra 	BB0_7;

	setp.eq.s32	%p4, %r27, 0;
	@%p4 bra 	BB0_23;
	bra.uni 	BB0_2;

BB0_23:
	ld.global.u32 	%r140, [dimension];
	setp.eq.s32	%p15, %r140, 1;
	@%p15 bra 	BB0_28;

	setp.eq.s32	%p16, %r140, 2;
	@%p16 bra 	BB0_27;
	bra.uni 	BB0_25;

BB0_27:
	add.u64 	%rd371, %SP, 336;
	cvta.to.local.u64 	%rd378, %rd371;
	cvt.u32.u64	%r163, %rd2;
	mov.u64 	%rd379, ra_radiance_payload_2d_out;
	cvta.global.u64 	%rd366, %rd379;
	mov.u32 	%r161, 2;
	mov.u32 	%r162, 96;
	// inline asm
	call (%rd365), _rt_buffer_get_64, (%rd366, %r161, %r162, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd380, %rd381}, [%rd365];
	st.local.v2.u64 	[%rd378], {%rd380, %rd381};
	ld.v2.u64 	{%rd384, %rd385}, [%rd365+16];
	st.local.v2.u64 	[%rd378+16], {%rd384, %rd385};
	ld.v2.u64 	{%rd388, %rd389}, [%rd365+32];
	st.local.v2.u64 	[%rd378+32], {%rd388, %rd389};
	ld.v2.u64 	{%rd392, %rd393}, [%rd365+48];
	st.local.v2.u64 	[%rd378+48], {%rd392, %rd393};
	ld.v2.u64 	{%rd396, %rd397}, [%rd365+64];
	st.local.v2.u64 	[%rd378+64], {%rd396, %rd397};
	ld.v2.u64 	{%rd400, %rd401}, [%rd365+80];
	st.local.v2.u64 	[%rd378+80], {%rd400, %rd401};
	ld.global.u32 	%r164, [problem_size];
	cvt.u32.u64	%r165, %rd1;
	mad.lo.s32 	%r166, %r164, %r163, %r165;
	add.s32 	%r167, %r166, 1;
	st.local.u32 	[%rd378+88], %r167;
	ld.global.u32 	%r158, [ra_entry_node];
	mov.f32 	%f100, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r158, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f100, %f7, %rd371, %r162);
	// inline asm
	// inline asm
	call (%rd372), _rt_buffer_get_64, (%rd366, %r161, %r162, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd404, %rd405}, [%rd378];
	st.v2.u64 	[%rd372], {%rd404, %rd405};
	ld.local.v2.u64 	{%rd408, %rd409}, [%rd378+16];
	st.v2.u64 	[%rd372+16], {%rd408, %rd409};
	ld.local.v2.u64 	{%rd412, %rd413}, [%rd378+32];
	st.v2.u64 	[%rd372+32], {%rd412, %rd413};
	ld.local.v2.u64 	{%rd416, %rd417}, [%rd378+48];
	st.v2.u64 	[%rd372+48], {%rd416, %rd417};
	ld.local.v2.u64 	{%rd420, %rd421}, [%rd378+64];
	st.v2.u64 	[%rd372+64], {%rd420, %rd421};
	ld.local.v2.u64 	{%rd424, %rd425}, [%rd378+80];
	st.v2.u64 	[%rd372+80], {%rd424, %rd425};
	bra.uni 	BB0_29;

BB0_7:
	setp.eq.s32	%p2, %r27, 2;
	@%p2 bra 	BB0_15;
	bra.uni 	BB0_8;

BB0_15:
	ld.global.u32 	%r68, [dimension];
	setp.eq.s32	%p9, %r68, 1;
	@%p9 bra 	BB0_20;

	setp.eq.s32	%p10, %r68, 2;
	@%p10 bra 	BB0_19;
	bra.uni 	BB0_17;

BB0_19:
	add.u64 	%rd153, %SP, 80;
	cvta.to.local.u64 	%rd160, %rd153;
	cvt.u32.u64	%r91, %rd1;
	mov.u64 	%rd161, ra_radiance_payload_monochromatic_2d_out;
	cvta.global.u64 	%rd148, %rd161;
	mov.u32 	%r89, 2;
	mov.u32 	%r90, 32;
	// inline asm
	call (%rd147), _rt_buffer_get_64, (%rd148, %r89, %r90, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd162, %rd163}, [%rd147];
	st.local.v2.u64 	[%rd160], {%rd162, %rd163};
	ld.v2.u64 	{%rd166, %rd167}, [%rd147+16];
	st.local.v2.u64 	[%rd160+16], {%rd166, %rd167};
	ld.global.u32 	%r92, [problem_size];
	cvt.u32.u64	%r93, %rd2;
	mad.lo.s32 	%r94, %r92, %r93, %r91;
	add.s32 	%r95, %r94, 1;
	st.local.u32 	[%rd160+24], %r95;
	ld.global.u32 	%r86, [ra_entry_node];
	mov.f32 	%f52, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r86, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f52, %f7, %rd153, %r90);
	// inline asm
	// inline asm
	call (%rd154), _rt_buffer_get_64, (%rd148, %r89, %r90, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd170, %rd171}, [%rd160];
	st.v2.u64 	[%rd154], {%rd170, %rd171};
	ld.local.v2.u64 	{%rd174, %rd175}, [%rd160+16];
	st.v2.u64 	[%rd154+16], {%rd174, %rd175};
	bra.uni 	BB0_29;

BB0_2:
	setp.eq.s32	%p5, %r27, 1;
	@%p5 bra 	BB0_3;
	bra.uni 	BB0_29;

BB0_3:
	ld.global.u32 	%r104, [dimension];
	setp.eq.s32	%p12, %r104, 1;
	@%p12 bra 	BB0_22;

	setp.eq.s32	%p13, %r104, 2;
	@%p13 bra 	BB0_21;
	bra.uni 	BB0_5;

BB0_21:
	add.u64 	%rd246, %SP, 176;
	cvta.to.local.u64 	%rd253, %rd246;
	cvt.u32.u64	%r127, %rd2;
	mov.u64 	%rd254, ra_radiance_payload_simple_2d_out;
	cvta.global.u64 	%rd241, %rd254;
	mov.u32 	%r125, 2;
	mov.u32 	%r126, 32;
	// inline asm
	call (%rd240), _rt_buffer_get_64, (%rd241, %r125, %r126, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd255, %rd256}, [%rd240];
	st.local.v2.u64 	[%rd253], {%rd255, %rd256};
	ld.v2.u64 	{%rd259, %rd260}, [%rd240+16];
	st.local.v2.u64 	[%rd253+16], {%rd259, %rd260};
	ld.global.u32 	%r128, [problem_size];
	cvt.u32.u64	%r129, %rd1;
	mad.lo.s32 	%r130, %r128, %r127, %r129;
	add.s32 	%r131, %r130, 1;
	st.local.u32 	[%rd253+24], %r131;
	ld.global.u32 	%r122, [ra_entry_node];
	mov.f32 	%f76, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r122, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f76, %f7, %rd246, %r126);
	// inline asm
	// inline asm
	call (%rd247), _rt_buffer_get_64, (%rd241, %r125, %r126, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd263, %rd264}, [%rd253];
	st.v2.u64 	[%rd247], {%rd263, %rd264};
	ld.local.v2.u64 	{%rd267, %rd268}, [%rd253+16];
	st.v2.u64 	[%rd247+16], {%rd267, %rd268};
	bra.uni 	BB0_29;

BB0_8:
	setp.ne.s32	%p3, %r27, 3;
	@%p3 bra 	BB0_29;

	ld.global.u32 	%r46, [dimension];
	setp.eq.s32	%p6, %r46, 1;
	@%p6 bra 	BB0_14;

	setp.eq.s32	%p7, %r46, 2;
	@%p7 bra 	BB0_13;
	bra.uni 	BB0_11;

BB0_13:
	add.u64 	%rd84, %SP, 16;
	cvta.to.local.u64 	%rd91, %rd84;
	mov.u64 	%rd92, ra_occlusion_payload_2d_out;
	cvta.global.u64 	%rd79, %rd92;
	mov.u32 	%r59, 2;
	mov.u32 	%r60, 16;
	// inline asm
	call (%rd78), _rt_buffer_get_64, (%rd79, %r59, %r60, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.u64 	%rd93, [%rd78];
	st.local.u64 	[%rd91], %rd93;
	ld.u64 	%rd94, [%rd78+8];
	st.local.u64 	[%rd91+8], %rd94;
	ld.global.u32 	%r56, [ra_entry_node];
	mov.f32 	%f28, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r56, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f28, %f7, %rd84, %r60);
	// inline asm
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd79, %r59, %r60, %rd1, %rd2, %rd57, %rd57);
	// inline asm
	ld.local.u64 	%rd95, [%rd91];
	st.u64 	[%rd85], %rd95;
	ld.local.u64 	%rd96, [%rd91+8];
	st.u64 	[%rd85+8], %rd96;
	bra.uni 	BB0_29;

BB0_28:
	add.u64 	%rd434, %SP, 432;
	cvta.to.local.u64 	%rd441, %rd434;
	mov.u64 	%rd442, ra_radiance_payload_1d_out;
	cvta.global.u64 	%rd429, %rd442;
	mov.u32 	%r174, 96;
	// inline asm
	call (%rd428), _rt_buffer_get_64, (%rd429, %r25, %r174, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd443, %rd444}, [%rd428];
	st.local.v2.u64 	[%rd441], {%rd443, %rd444};
	ld.v2.u64 	{%rd447, %rd448}, [%rd428+16];
	st.local.v2.u64 	[%rd441+16], {%rd447, %rd448};
	ld.v2.u64 	{%rd451, %rd452}, [%rd428+32];
	st.local.v2.u64 	[%rd441+32], {%rd451, %rd452};
	ld.v2.u64 	{%rd455, %rd456}, [%rd428+48];
	st.local.v2.u64 	[%rd441+48], {%rd455, %rd456};
	ld.v2.u64 	{%rd459, %rd460}, [%rd428+64];
	st.local.v2.u64 	[%rd441+64], {%rd459, %rd460};
	ld.v2.u64 	{%rd463, %rd464}, [%rd428+80];
	st.local.v2.u64 	[%rd441+80], {%rd463, %rd464};
	add.s32 	%r175, %r1, 1;
	st.local.u32 	[%rd441+88], %r175;
	ld.local.u32 	%r176, [%rd441+92];
	add.s32 	%r177, %r176, 1;
	st.local.u32 	[%rd441+92], %r177;
	ld.global.u32 	%r170, [ra_entry_node];
	mov.f32 	%f108, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r170, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f108, %f7, %rd434, %r174);
	// inline asm
	// inline asm
	call (%rd435), _rt_buffer_get_64, (%rd429, %r25, %r174, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd467, %rd468}, [%rd441];
	st.v2.u64 	[%rd435], {%rd467, %rd468};
	ld.local.v2.u64 	{%rd471, %rd472}, [%rd441+16];
	st.v2.u64 	[%rd435+16], {%rd471, %rd472};
	ld.local.v2.u64 	{%rd475, %rd476}, [%rd441+32];
	st.v2.u64 	[%rd435+32], {%rd475, %rd476};
	ld.local.v2.u64 	{%rd479, %rd480}, [%rd441+48];
	st.v2.u64 	[%rd435+48], {%rd479, %rd480};
	ld.local.v2.u64 	{%rd483, %rd484}, [%rd441+64];
	st.v2.u64 	[%rd435+64], {%rd483, %rd484};
	ld.local.v2.u64 	{%rd487, %rd488}, [%rd441+80];
	st.v2.u64 	[%rd435+80], {%rd487, %rd488};
	bra.uni 	BB0_29;

BB0_25:
	setp.ne.s32	%p17, %r140, 3;
	@%p17 bra 	BB0_29;

	add.u64 	%rd308, %SP, 240;
	cvta.to.local.u64 	%rd315, %rd308;
	cvt.u32.u64	%r148, %rd3;
	mov.u64 	%rd316, ra_radiance_payload_3d_out;
	cvta.global.u64 	%rd303, %rd316;
	mov.u32 	%r146, 3;
	mov.u32 	%r147, 96;
	// inline asm
	call (%rd302), _rt_buffer_get_64, (%rd303, %r146, %r147, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.v2.u64 	{%rd317, %rd318}, [%rd302];
	st.local.v2.u64 	[%rd315], {%rd317, %rd318};
	ld.v2.u64 	{%rd321, %rd322}, [%rd302+16];
	st.local.v2.u64 	[%rd315+16], {%rd321, %rd322};
	ld.v2.u64 	{%rd325, %rd326}, [%rd302+32];
	st.local.v2.u64 	[%rd315+32], {%rd325, %rd326};
	ld.v2.u64 	{%rd329, %rd330}, [%rd302+48];
	st.local.v2.u64 	[%rd315+48], {%rd329, %rd330};
	ld.v2.u64 	{%rd333, %rd334}, [%rd302+64];
	st.local.v2.u64 	[%rd315+64], {%rd333, %rd334};
	ld.v2.u64 	{%rd337, %rd338}, [%rd302+80];
	st.local.v2.u64 	[%rd315+80], {%rd337, %rd338};
	ld.global.u32 	%r149, [problem_size+4];
	cvt.u32.u64	%r150, %rd2;
	mad.lo.s32 	%r151, %r149, %r148, %r150;
	ld.global.u32 	%r152, [problem_size];
	cvt.u32.u64	%r153, %rd1;
	mad.lo.s32 	%r154, %r151, %r152, %r153;
	add.s32 	%r155, %r154, 1;
	st.local.u32 	[%rd315+88], %r155;
	ld.global.u32 	%r143, [ra_entry_node];
	mov.f32 	%f92, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r143, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f92, %f7, %rd308, %r147);
	// inline asm
	// inline asm
	call (%rd309), _rt_buffer_get_64, (%rd303, %r146, %r147, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd341, %rd342}, [%rd315];
	st.v2.u64 	[%rd309], {%rd341, %rd342};
	ld.local.v2.u64 	{%rd345, %rd346}, [%rd315+16];
	st.v2.u64 	[%rd309+16], {%rd345, %rd346};
	ld.local.v2.u64 	{%rd349, %rd350}, [%rd315+32];
	st.v2.u64 	[%rd309+32], {%rd349, %rd350};
	ld.local.v2.u64 	{%rd353, %rd354}, [%rd315+48];
	st.v2.u64 	[%rd309+48], {%rd353, %rd354};
	ld.local.v2.u64 	{%rd357, %rd358}, [%rd315+64];
	st.v2.u64 	[%rd309+64], {%rd357, %rd358};
	ld.local.v2.u64 	{%rd361, %rd362}, [%rd315+80];
	st.v2.u64 	[%rd309+80], {%rd361, %rd362};
	bra.uni 	BB0_29;

BB0_20:
	add.u64 	%rd184, %SP, 112;
	cvta.to.local.u64 	%rd191, %rd184;
	mov.u64 	%rd192, ra_radiance_payload_monochromatic_1d_out;
	cvta.global.u64 	%rd179, %rd192;
	mov.u32 	%r102, 32;
	// inline asm
	call (%rd178), _rt_buffer_get_64, (%rd179, %r25, %r102, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd193, %rd194}, [%rd178];
	st.local.v2.u64 	[%rd191], {%rd193, %rd194};
	ld.v2.u64 	{%rd197, %rd198}, [%rd178+16];
	st.local.v2.u64 	[%rd191+16], {%rd197, %rd198};
	add.s32 	%r103, %r1, 1;
	st.local.u32 	[%rd191+24], %r103;
	ld.global.u32 	%r98, [ra_entry_node];
	mov.f32 	%f60, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r98, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f60, %f7, %rd184, %r102);
	// inline asm
	// inline asm
	call (%rd185), _rt_buffer_get_64, (%rd179, %r25, %r102, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd201, %rd202}, [%rd191];
	st.v2.u64 	[%rd185], {%rd201, %rd202};
	ld.local.v2.u64 	{%rd205, %rd206}, [%rd191+16];
	st.v2.u64 	[%rd185+16], {%rd205, %rd206};
	bra.uni 	BB0_29;

BB0_17:
	setp.ne.s32	%p11, %r68, 3;
	@%p11 bra 	BB0_29;

	add.u64 	%rd122, %SP, 48;
	cvta.to.local.u64 	%rd129, %rd122;
	cvt.u32.u64	%r76, %rd3;
	mov.u64 	%rd130, ra_radiance_payload_monochromatic_3d_out;
	cvta.global.u64 	%rd117, %rd130;
	mov.u32 	%r74, 3;
	mov.u32 	%r75, 32;
	// inline asm
	call (%rd116), _rt_buffer_get_64, (%rd117, %r74, %r75, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.v2.u64 	{%rd131, %rd132}, [%rd116];
	st.local.v2.u64 	[%rd129], {%rd131, %rd132};
	ld.v2.u64 	{%rd135, %rd136}, [%rd116+16];
	st.local.v2.u64 	[%rd129+16], {%rd135, %rd136};
	ld.global.u32 	%r77, [problem_size+4];
	cvt.u32.u64	%r78, %rd2;
	mad.lo.s32 	%r79, %r77, %r76, %r78;
	ld.global.u32 	%r80, [problem_size];
	cvt.u32.u64	%r81, %rd1;
	mad.lo.s32 	%r82, %r79, %r80, %r81;
	add.s32 	%r83, %r82, 1;
	st.local.u32 	[%rd129+24], %r83;
	ld.global.u32 	%r71, [ra_entry_node];
	mov.f32 	%f44, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r71, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f44, %f7, %rd122, %r75);
	// inline asm
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd117, %r74, %r75, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd139, %rd140}, [%rd129];
	st.v2.u64 	[%rd123], {%rd139, %rd140};
	ld.local.v2.u64 	{%rd143, %rd144}, [%rd129+16];
	st.v2.u64 	[%rd123+16], {%rd143, %rd144};
	bra.uni 	BB0_29;

BB0_22:
	add.u64 	%rd277, %SP, 208;
	cvta.to.local.u64 	%rd284, %rd277;
	mov.u64 	%rd285, ra_radiance_payload_simple_1d_out;
	cvta.global.u64 	%rd272, %rd285;
	mov.u32 	%r138, 32;
	// inline asm
	call (%rd271), _rt_buffer_get_64, (%rd272, %r25, %r138, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.v2.u64 	{%rd286, %rd287}, [%rd271];
	st.local.v2.u64 	[%rd284], {%rd286, %rd287};
	ld.v2.u64 	{%rd290, %rd291}, [%rd271+16];
	st.local.v2.u64 	[%rd284+16], {%rd290, %rd291};
	add.s32 	%r139, %r1, 1;
	st.local.u32 	[%rd284+24], %r139;
	ld.global.u32 	%r134, [ra_entry_node];
	mov.f32 	%f84, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r134, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f84, %f7, %rd277, %r138);
	// inline asm
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd272, %r25, %r138, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd294, %rd295}, [%rd284];
	st.v2.u64 	[%rd278], {%rd294, %rd295};
	ld.local.v2.u64 	{%rd298, %rd299}, [%rd284+16];
	st.v2.u64 	[%rd278+16], {%rd298, %rd299};
	bra.uni 	BB0_29;

BB0_14:
	add.u64 	%rd103, %SP, 32;
	cvta.to.local.u64 	%rd110, %rd103;
	mov.u64 	%rd111, ra_occlusion_payload_1d_out;
	cvta.global.u64 	%rd98, %rd111;
	mov.u32 	%r67, 16;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd98, %r25, %r67, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.u64 	%rd112, [%rd97];
	st.local.u64 	[%rd110], %rd112;
	ld.u64 	%rd113, [%rd97+8];
	st.local.u64 	[%rd110+8], %rd113;
	ld.global.u32 	%r63, [ra_entry_node];
	mov.f32 	%f36, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r63, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f36, %f7, %rd103, %r67);
	// inline asm
	// inline asm
	call (%rd104), _rt_buffer_get_64, (%rd98, %r25, %r67, %rd1, %rd57, %rd57, %rd57);
	// inline asm
	ld.local.u64 	%rd114, [%rd110];
	st.u64 	[%rd104], %rd114;
	ld.local.u64 	%rd115, [%rd110+8];
	st.u64 	[%rd104+8], %rd115;
	bra.uni 	BB0_29;

BB0_5:
	setp.ne.s32	%p14, %r104, 3;
	@%p14 bra 	BB0_29;

	add.u64 	%rd215, %SP, 144;
	cvta.to.local.u64 	%rd222, %rd215;
	cvt.u32.u64	%r112, %rd3;
	mov.u64 	%rd223, ra_radiance_payload_simple_3d_out;
	cvta.global.u64 	%rd210, %rd223;
	mov.u32 	%r110, 3;
	mov.u32 	%r111, 32;
	// inline asm
	call (%rd209), _rt_buffer_get_64, (%rd210, %r110, %r111, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.v2.u64 	{%rd224, %rd225}, [%rd209];
	st.local.v2.u64 	[%rd222], {%rd224, %rd225};
	ld.v2.u64 	{%rd228, %rd229}, [%rd209+16];
	st.local.v2.u64 	[%rd222+16], {%rd228, %rd229};
	ld.global.u32 	%r113, [problem_size+4];
	cvt.u32.u64	%r114, %rd2;
	mad.lo.s32 	%r115, %r113, %r112, %r114;
	ld.global.u32 	%r116, [problem_size];
	cvt.u32.u64	%r117, %rd1;
	mad.lo.s32 	%r118, %r115, %r116, %r117;
	add.s32 	%r119, %r118, 1;
	st.local.u32 	[%rd222+24], %r119;
	ld.global.u32 	%r107, [ra_entry_node];
	mov.f32 	%f68, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r107, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f68, %f7, %rd215, %r111);
	// inline asm
	// inline asm
	call (%rd216), _rt_buffer_get_64, (%rd210, %r110, %r111, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.local.v2.u64 	{%rd232, %rd233}, [%rd222];
	st.v2.u64 	[%rd216], {%rd232, %rd233};
	ld.local.v2.u64 	{%rd236, %rd237}, [%rd222+16];
	st.v2.u64 	[%rd216+16], {%rd236, %rd237};
	bra.uni 	BB0_29;

BB0_11:
	setp.ne.s32	%p8, %r46, 3;
	@%p8 bra 	BB0_29;

	add.u64 	%rd65, %SP, 0;
	cvta.to.local.u64 	%rd72, %rd65;
	mov.u64 	%rd73, ra_occlusion_payload_3d_out;
	cvta.global.u64 	%rd60, %rd73;
	mov.u32 	%r52, 3;
	mov.u32 	%r53, 16;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r52, %r53, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.u64 	%rd74, [%rd59];
	st.local.u64 	[%rd72], %rd74;
	ld.u64 	%rd75, [%rd59+8];
	st.local.u64 	[%rd72+8], %rd75;
	ld.global.u32 	%r49, [ra_entry_node];
	mov.f32 	%f20, 0f00000000;
	// inline asm
	call _rt_trace_64, (%r49, %f8, %f9, %f10, %f11, %f12, %f13, %r2, %f20, %f7, %rd65, %r53);
	// inline asm
	// inline asm
	call (%rd66), _rt_buffer_get_64, (%rd60, %r52, %r53, %rd1, %rd2, %rd3, %rd57);
	// inline asm
	ld.local.u64 	%rd76, [%rd72];
	st.u64 	[%rd66], %rd76;
	ld.local.u64 	%rd77, [%rd72+8];
	st.u64 	[%rd66+8], %rd77;

BB0_29:
	ret;
}



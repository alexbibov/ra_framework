//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_60
.address_size 64

	// .globl	_Z18__ra_closest_hit__v
.global .align 4 .b8 ra_entry_node[4];
.global .align 4 .f32 step_size;
.global .align 4 .b8 problem_size[12];
.global .align 4 .u32 max_recursion_depth;
.global .align 4 .u32 num_spectra_pairs_supported;
.global .align 4 .u32 num_importance_directions;
.global .align 4 .b8 absorption_factor[4];
.global .align 4 .b8 scattering_factor[4];
.global .align 4 .b8 phase_function[4];
.global .align 16 .b8 ray_payload[96];
.global .align 16 .b8 ray_payload_scattered[32];
.global .align 4 .f32 intersection_distance;
.global .align 4 .b8 current_ray[36];
.global .align 4 .b8 index[12];
.global .align 4 .b8 normal[12];
.global .align 1 .b8 importance_directions_buffer[1];
.global .align 1 .b8 traverse_backup_buffer[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo13ra_entry_nodeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9step_sizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12problem_sizeE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19max_recursion_depthE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo27num_spectra_pairs_supportedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo25num_importance_directionsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17absorption_factorE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17scattering_factorE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14phase_functionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11ray_payloadE[8] = {82, 97, 121, 0, 96, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21ray_payload_scatteredE[8] = {82, 97, 121, 0, 32, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo21intersection_distanceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11current_rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5indexE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename13ra_entry_nodeE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9step_sizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12problem_sizeE[6] = {117, 105, 110, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19max_recursion_depthE[12] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename27num_spectra_pairs_supportedE[12] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename25num_importance_directionsE[12] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17absorption_factorE[23] = {102, 97, 99, 116, 111, 114, 95, 112, 114, 111, 103, 114, 97, 109, 95, 105, 100, 95, 116, 121, 112, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17scattering_factorE[23] = {102, 97, 99, 116, 111, 114, 95, 112, 114, 111, 103, 114, 97, 109, 95, 105, 100, 95, 116, 121, 112, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_typename14phase_functionE[31] = {112, 104, 97, 115, 101, 95, 102, 117, 110, 99, 116, 105, 111, 110, 95, 112, 114, 111, 103, 114, 97, 109, 95, 105, 100, 95, 116, 121, 112, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_typename11ray_payloadE[25] = {114, 97, 58, 58, 82, 97, 82, 97, 121, 82, 97, 100, 105, 97, 110, 99, 101, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_typename21ray_payload_scatteredE[31] = {114, 97, 58, 58, 82, 97, 82, 97, 121, 82, 97, 100, 105, 97, 110, 99, 101, 80, 97, 121, 108, 111, 97, 100, 83, 105, 109, 112, 108, 101, 0};
.global .align 8 .b8 _ZN21rti_internal_typename21intersection_distanceE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename11current_rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_typename5indexE[13] = {111, 112, 116, 105, 120, 58, 58, 117, 105, 110, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6normalE[14] = {111, 112, 116, 105, 120, 58, 58, 102, 108, 111, 97, 116, 51, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum13ra_entry_nodeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9step_sizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12problem_sizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19max_recursion_depthE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum27num_spectra_pairs_supportedE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum25num_importance_directionsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum17absorption_factorE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum17scattering_factorE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14phase_functionE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum11ray_payloadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum21ray_payload_scatteredE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum21intersection_distanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11current_rayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5indexE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic13ra_entry_nodeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9step_sizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12problem_sizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic19max_recursion_depthE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic27num_spectra_pairs_supportedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic25num_importance_directionsE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17absorption_factorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17scattering_factorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14phase_functionE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic11ray_payloadE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic21ray_payload_scatteredE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic21intersection_distanceE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic11current_rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic5indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 116, 116, 114, 78, 111, 114, 109, 97, 108, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation13ra_entry_nodeE[19] = {34, 83, 99, 101, 110, 101, 32, 101, 110, 116, 114, 121, 32, 110, 111, 100, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation9step_sizeE[25] = {34, 82, 97, 121, 32, 109, 97, 114, 99, 104, 105, 110, 103, 32, 115, 116, 101, 112, 32, 115, 105, 122, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation12problem_sizeE[31] = {34, 79, 114, 105, 103, 105, 110, 97, 108, 32, 115, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 112, 114, 111, 98, 108, 101, 109, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation19max_recursion_depthE[53] = {34, 77, 97, 120, 105, 109, 97, 108, 32, 100, 101, 112, 116, 104, 32, 111, 102, 32, 114, 101, 99, 117, 114, 115, 105, 111, 110, 32, 102, 111, 114, 32, 115, 99, 97, 116, 116, 101, 114, 105, 110, 103, 32, 116, 114, 97, 118, 101, 114, 115, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation27num_spectra_pairs_supportedE[31] = {34, 78, 117, 109, 98, 101, 114, 32, 111, 102, 32, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 115, 32, 105, 110, 32, 117, 115, 101, 34, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation25num_importance_directionsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17absorption_factorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17scattering_factorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14phase_functionE[1];
.global .align 16 .b8 _ZN23rti_internal_annotation11ray_payloadE[22] = {34, 67, 117, 114, 114, 101, 110, 116, 32, 114, 97, 121, 32, 112, 97, 121, 108, 111, 97, 100, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation21ray_payload_scatteredE[40] = {34, 80, 97, 121, 108, 111, 97, 100, 32, 111, 102, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 115, 99, 97, 116, 116, 101, 114, 105, 110, 103, 32, 114, 97, 121, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation21intersection_distanceE[58] = {34, 80, 97, 114, 97, 109, 101, 116, 114, 105, 99, 32, 100, 105, 115, 116, 97, 110, 99, 101, 32, 102, 114, 111, 109, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 116, 111, 32, 116, 104, 101, 32, 105, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation11current_rayE[26] = {34, 67, 117, 114, 114, 101, 110, 116, 108, 121, 32, 116, 114, 97, 118, 101, 114, 115, 101, 100, 32, 114, 97, 121, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation5indexE[27] = {34, 73, 110, 100, 101, 120, 32, 111, 102, 32, 116, 104, 101, 32, 99, 117, 114, 114, 101, 110, 116, 32, 114, 97, 121, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation6normalE[34] = {34, 78, 111, 114, 109, 97, 108, 32, 111, 102, 32, 116, 104, 101, 32, 115, 117, 114, 102, 97, 99, 101, 32, 98, 101, 105, 110, 103, 32, 104, 105, 116, 34, 0};
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z18__ra_closest_hit__v(

)
{
	.local .align 16 .b8 	__local_depot0[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<88>;
	.reg .f32 	%f<422>;
	.reg .b32 	%r<563>;
	.reg .b64 	%rd<133>;


	mov.u64 	%rd132, __local_depot0;
	cvta.local.u64 	%SP, %rd132;
	ld.global.f32 	%f1, [current_ray+12];
	ld.global.f32 	%f122, [normal];
	ld.global.f32 	%f2, [current_ray+16];
	ld.global.f32 	%f123, [normal+4];
	mul.f32 	%f124, %f123, %f2;
	fma.rn.f32 	%f125, %f122, %f1, %f124;
	ld.global.f32 	%f3, [current_ray+20];
	ld.global.f32 	%f126, [normal+8];
	fma.rn.f32 	%f4, %f126, %f3, %f125;
	setp.lt.f32	%p1, %f4, 0f80000000;
	mov.f32 	%f387, 0f3F800000;
	@%p1 bra 	BB0_2;

	setp.gt.f32	%p2, %f4, 0f80000000;
	selp.f32	%f387, 0fBF800000, 0f00000000, %p2;

BB0_2:
	ld.global.u32 	%r194, [ray_payload+84];
	cvt.rzi.s32.f32	%r1, %f387;
	add.s32 	%r195, %r194, %r1;
	mov.u32 	%r196, 0;
	max.s32 	%r197, %r196, %r195;
	st.global.u32 	[ray_payload+84], %r197;
	ld.global.f32 	%f7, [intersection_distance];
	ld.global.f32 	%f8, [current_ray];
	fma.rn.f32 	%f9, %f7, %f1, %f8;
	ld.global.f32 	%f10, [current_ray+4];
	fma.rn.f32 	%f11, %f7, %f2, %f10;
	ld.global.f32 	%f12, [current_ray+8];
	fma.rn.f32 	%f13, %f7, %f3, %f12;
	setp.gt.s32	%p3, %r1, 0;
	@%p3 bra 	BB0_129;
	bra.uni 	BB0_3;

BB0_129:
	st.global.v2.f32 	[ray_payload+64], {%f7, %f7};
	ld.global.u32 	%r456, [ray_payload+80];
	add.s32 	%r457, %r456, 1;
	st.global.u32 	[ray_payload+80], %r457;
	ld.global.u32 	%r458, [max_recursion_depth];
	setp.gt.u32	%p86, %r457, %r458;
	@%p86 bra 	BB0_131;
	bra.uni 	BB0_130;

BB0_131:
	mov.u32 	%r462, 0;
	st.global.u32 	[ray_payload+80], %r462;
	ld.global.u32 	%r184, [ray_payload+88];
	setp.eq.s32	%p87, %r184, 0;
	@%p87 bra 	BB0_133;

	add.s32 	%r463, %r184, -1;
	ld.global.u32 	%r464, [problem_size+4];
	ld.global.u32 	%r465, [problem_size];
	mul.lo.s32 	%r466, %r464, %r465;
	div.u32 	%r562, %r463, %r466;
	mul.lo.s32 	%r467, %r466, %r562;
	sub.s32 	%r468, %r463, %r467;
	div.u32 	%r561, %r468, %r465;
	mul.lo.s32 	%r469, %r561, %r465;
	sub.s32 	%r560, %r468, %r469;
	bra.uni 	BB0_134;

BB0_3:
	setp.gt.s32	%p4, %r1, -1;
	@%p4 bra 	BB0_135;

	ld.global.f32 	%f127, [ray_payload+68];
	add.f32 	%f128, %f7, %f127;
	st.global.f32 	[ray_payload+68], %f128;
	mul.f32 	%f129, %f7, 0f3F000000;
	fma.rn.f32 	%f14, %f1, %f129, %f8;
	fma.rn.f32 	%f15, %f129, %f2, %f10;
	fma.rn.f32 	%f16, %f129, %f3, %f12;
	ld.global.f32 	%f130, [current_ray+12];
	ld.global.f32 	%f131, [current_ray+16];
	ld.global.f32 	%f132, [current_ray+20];
	abs.f32 	%f133, %f132;
	mov.f32 	%f134, 0f3F800000;
	sub.f32 	%f135, %f134, %f133;
	mul.f32 	%f136, %f135, 0f3F000000;
	sqrt.rn.f32 	%f137, %f136;
	setp.gt.f32	%p5, %f133, 0f3F11EB85;
	selp.f32	%f138, %f137, %f133, %p5;
	mul.f32 	%f139, %f138, %f138;
	mov.f32 	%f140, 0f3C94D2E9;
	mov.f32 	%f141, 0f3D53F941;
	fma.rn.f32 	%f142, %f141, %f139, %f140;
	mov.f32 	%f143, 0f3D3F841F;
	fma.rn.f32 	%f144, %f142, %f139, %f143;
	mov.f32 	%f145, 0f3D994929;
	fma.rn.f32 	%f146, %f144, %f139, %f145;
	mov.f32 	%f147, 0f3E2AAB94;
	fma.rn.f32 	%f148, %f146, %f139, %f147;
	mul.f32 	%f149, %f139, %f148;
	fma.rn.f32 	%f150, %f149, %f138, %f138;
	add.f32 	%f151, %f150, %f150;
	mov.f32 	%f152, 0f3FC90FDB;
	sub.f32 	%f153, %f152, %f150;
	selp.f32	%f154, %f151, %f153, %p5;
	setp.lt.f32	%p6, %f132, 0f00000000;
	mov.f32 	%f155, 0f40490FDB;
	sub.f32 	%f156, %f155, %f154;
	selp.f32	%f17, %f156, %f154, %p6;
	mul.f32 	%f157, %f131, %f131;
	fma.rn.f32 	%f158, %f130, %f130, %f157;
	sqrt.rn.f32 	%f159, %f158;
	div.rn.f32 	%f160, %f130, %f159;
	setp.ltu.f32	%p7, %f131, 0f00000000;
	selp.f32	%f161, 0fBF800000, 0f3F800000, %p7;
	mul.f32 	%f162, %f161, %f160;
	abs.f32 	%f163, %f162;
	sub.f32 	%f164, %f134, %f163;
	mul.f32 	%f165, %f164, 0f3F000000;
	sqrt.rn.f32 	%f166, %f165;
	setp.gt.f32	%p8, %f163, 0f3F11EB85;
	selp.f32	%f167, %f166, %f163, %p8;
	mul.f32 	%f168, %f167, %f167;
	fma.rn.f32 	%f169, %f141, %f168, %f140;
	fma.rn.f32 	%f170, %f169, %f168, %f143;
	fma.rn.f32 	%f171, %f170, %f168, %f145;
	fma.rn.f32 	%f172, %f171, %f168, %f147;
	mul.f32 	%f173, %f168, %f172;
	fma.rn.f32 	%f174, %f173, %f167, %f167;
	add.f32 	%f175, %f174, %f174;
	sub.f32 	%f176, %f152, %f174;
	selp.f32	%f177, %f175, %f176, %p8;
	setp.lt.f32	%p9, %f162, 0f00000000;
	sub.f32 	%f178, %f155, %f177;
	selp.f32	%f179, %f178, %f177, %p9;
	setp.lt.f32	%p10, %f131, 0f00000000;
	selp.f32	%f180, 0f40490FDB, 0f00000000, %p10;
	add.f32 	%f18, %f180, %f179;
	ld.global.u32 	%r198, [num_spectra_pairs_supported];
	mov.u32 	%r199, 8;
	min.u32 	%r2, %r199, %r198;
	setp.eq.s32	%p11, %r2, 0;
	@%p11 bra 	BB0_127;

	add.s32 	%r3, %r2, 1;
	add.u64 	%rd30, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd30;
	add.s64 	%rd2, %rd1, 24;
	add.u64 	%rd31, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd31;
	mov.u32 	%r507, %r196;

BB0_6:
	ld.global.u32 	%r202, [num_importance_directions];
	setp.eq.s32	%p12, %r202, 0;
	mov.f32 	%f420, 0f00000000;
	mov.u32 	%r559, %r196;
	mov.f32 	%f421, %f420;
	@%p12 bra 	BB0_124;

	add.s32 	%r5, %r507, 1;
	mov.f32 	%f184, 0f00000000;
	mov.u32 	%r508, 0;
	mov.f32 	%f420, %f184;
	mov.f32 	%f421, %f184;

BB0_8:
	st.local.v2.f32 	[%rd3], {%f184, %f184};
	mul.lo.s32 	%r206, %r508, %r3;
	add.s32 	%r207, %r5, %r206;
	st.local.v2.u32 	[%rd3+24], {%r207, %r507};
	ld.global.v2.u32 	{%r208, %r209}, [ray_payload+80];
	add.s32 	%r212, %r208, 1;
	st.local.v2.u32 	[%rd3+16], {%r212, %r209};
	cvt.u64.u32	%rd34, %r206;
	mov.u64 	%rd38, importance_directions_buffer;
	cvta.global.u64 	%rd33, %rd38;
	mov.u32 	%r204, 1;
	mov.u64 	%rd37, 0;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r204, %r199, %rd34, %rd37, %rd37, %rd37);
	// inline asm
	ld.v2.f32 	{%f414, %f187}, [%rd32];
	abs.f32 	%f27, %f414;
	setp.neu.f32	%p13, %f27, 0f7F800000;
	mov.f32 	%f390, %f414;
	@%p13 bra 	BB0_10;

	mov.f32 	%f188, 0f00000000;
	mul.rn.f32 	%f390, %f414, %f188;

BB0_10:
	mul.f32 	%f189, %f390, 0f3F22F983;
	cvt.rni.s32.f32	%r518, %f189;
	cvt.rn.f32.s32	%f190, %r518;
	neg.f32 	%f191, %f190;
	mov.f32 	%f192, 0f3FC90FDA;
	fma.rn.f32 	%f193, %f191, %f192, %f390;
	mov.f32 	%f194, 0f33A22168;
	fma.rn.f32 	%f195, %f191, %f194, %f193;
	mov.f32 	%f196, 0f27C234C5;
	fma.rn.f32 	%f391, %f191, %f196, %f195;
	abs.f32 	%f197, %f390;
	setp.leu.f32	%p14, %f197, 0f47CE4780;
	@%p14 bra 	BB0_21;

	mov.b32 	 %r8, %f390;
	shl.b32 	%r215, %r8, 8;
	or.b32  	%r9, %r215, -2147483648;
	mov.u32 	%r510, 0;
	mov.u64 	%rd122, __cudart_i2opi_f;
	mov.u32 	%r509, -6;
	mov.u64 	%rd123, %rd1;

BB0_12:
	.pragma "nounroll";
	ld.const.u32 	%r218, [%rd122];
	// inline asm
	{
	mad.lo.cc.u32   %r216, %r218, %r9, %r510;
	madc.hi.u32     %r510, %r218, %r9,  0;
	}
	// inline asm
	st.local.u32 	[%rd123], %r216;
	add.s64 	%rd123, %rd123, 4;
	add.s64 	%rd122, %rd122, 4;
	add.s32 	%r509, %r509, 1;
	setp.ne.s32	%p15, %r509, 0;
	@%p15 bra 	BB0_12;

	bfe.u32 	%r221, %r8, 23, 8;
	add.s32 	%r222, %r221, -128;
	shr.u32 	%r223, %r222, 5;
	and.b32  	%r14, %r8, -2147483648;
	st.local.u32 	[%rd2], %r510;
	bfe.u32 	%r15, %r8, 23, 5;
	mov.u32 	%r224, 6;
	sub.s32 	%r225, %r224, %r223;
	mul.wide.s32 	%rd40, %r225, 4;
	add.s64 	%rd9, %rd1, %rd40;
	ld.local.u32 	%r511, [%rd9];
	ld.local.u32 	%r512, [%rd9+-4];
	setp.eq.s32	%p16, %r15, 0;
	@%p16 bra 	BB0_15;

	mov.u32 	%r226, 32;
	sub.s32 	%r227, %r226, %r15;
	shr.u32 	%r228, %r512, %r227;
	shl.b32 	%r229, %r511, %r15;
	add.s32 	%r511, %r228, %r229;
	ld.local.u32 	%r230, [%rd9+-8];
	shr.u32 	%r231, %r230, %r227;
	shl.b32 	%r232, %r512, %r15;
	add.s32 	%r512, %r231, %r232;

BB0_15:
	shr.u32 	%r233, %r512, 30;
	shl.b32 	%r234, %r511, 2;
	add.s32 	%r513, %r233, %r234;
	shl.b32 	%r23, %r512, 2;
	shr.u32 	%r235, %r513, 31;
	shr.u32 	%r236, %r511, 30;
	add.s32 	%r24, %r235, %r236;
	setp.eq.s32	%p17, %r235, 0;
	@%p17 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r514, %r14;
	mov.u32 	%r515, %r23;
	bra.uni 	BB0_18;

BB0_17:
	not.b32 	%r237, %r513;
	neg.s32 	%r515, %r23;
	setp.eq.s32	%p18, %r23, 0;
	selp.u32	%r238, 1, 0, %p18;
	add.s32 	%r513, %r238, %r237;
	xor.b32  	%r514, %r14, -2147483648;

BB0_18:
	clz.b32 	%r517, %r513;
	setp.eq.s32	%p19, %r517, 0;
	shl.b32 	%r239, %r513, %r517;
	mov.u32 	%r240, 32;
	sub.s32 	%r241, %r240, %r517;
	shr.u32 	%r242, %r515, %r241;
	add.s32 	%r243, %r242, %r239;
	selp.b32	%r32, %r513, %r243, %p19;
	mov.u32 	%r244, -921707870;
	mul.hi.u32 	%r516, %r32, %r244;
	setp.eq.s32	%p20, %r14, 0;
	neg.s32 	%r245, %r24;
	selp.b32	%r518, %r24, %r245, %p20;
	setp.lt.s32	%p21, %r516, 1;
	@%p21 bra 	BB0_20;

	mul.lo.s32 	%r246, %r32, -921707870;
	shr.u32 	%r247, %r246, 31;
	shl.b32 	%r248, %r516, 1;
	add.s32 	%r516, %r247, %r248;
	add.s32 	%r517, %r517, 1;

BB0_20:
	mov.u32 	%r249, 126;
	sub.s32 	%r250, %r249, %r517;
	shl.b32 	%r251, %r250, 23;
	add.s32 	%r252, %r516, 1;
	shr.u32 	%r253, %r252, 7;
	add.s32 	%r254, %r253, 1;
	shr.u32 	%r255, %r254, 1;
	add.s32 	%r256, %r255, %r251;
	or.b32  	%r257, %r256, %r514;
	mov.b32 	 %f391, %r257;

BB0_21:
	mul.rn.f32 	%f33, %f391, %f391;
	add.s32 	%r40, %r518, 1;
	and.b32  	%r41, %r40, 1;
	setp.eq.s32	%p22, %r41, 0;
	@%p22 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f200, 0f3C08839E;
	mov.f32 	%f201, 0fB94CA1F9;
	fma.rn.f32 	%f392, %f201, %f33, %f200;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f198, 0fBAB6061A;
	mov.f32 	%f199, 0f37CCF5CE;
	fma.rn.f32 	%f392, %f199, %f33, %f198;

BB0_24:
	@%p22 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f205, 0fBE2AAAA3;
	fma.rn.f32 	%f206, %f392, %f33, %f205;
	mov.f32 	%f207, 0f00000000;
	fma.rn.f32 	%f393, %f206, %f33, %f207;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f202, 0f3D2AAAA5;
	fma.rn.f32 	%f203, %f392, %f33, %f202;
	mov.f32 	%f204, 0fBF000000;
	fma.rn.f32 	%f393, %f203, %f33, %f204;

BB0_27:
	fma.rn.f32 	%f394, %f393, %f391, %f391;
	@%p22 bra 	BB0_29;

	fma.rn.f32 	%f394, %f393, %f33, %f134;

BB0_29:
	and.b32  	%r258, %r40, 2;
	setp.eq.s32	%p25, %r258, 0;
	@%p25 bra 	BB0_31;

	mov.f32 	%f209, 0f00000000;
	mov.f32 	%f210, 0fBF800000;
	fma.rn.f32 	%f394, %f394, %f210, %f209;

BB0_31:
	mov.f32 	%f396, %f414;
	@%p13 bra 	BB0_33;

	mov.f32 	%f211, 0f00000000;
	mul.rn.f32 	%f396, %f414, %f211;

BB0_33:
	mul.f32 	%f212, %f396, 0f3F22F983;
	cvt.rni.s32.f32	%r528, %f212;
	cvt.rn.f32.s32	%f213, %r528;
	neg.f32 	%f214, %f213;
	fma.rn.f32 	%f216, %f214, %f192, %f396;
	fma.rn.f32 	%f218, %f214, %f194, %f216;
	fma.rn.f32 	%f397, %f214, %f196, %f218;
	abs.f32 	%f220, %f396;
	setp.leu.f32	%p27, %f220, 0f47CE4780;
	@%p27 bra 	BB0_44;

	mov.b32 	 %r43, %f396;
	shl.b32 	%r261, %r43, 8;
	or.b32  	%r44, %r261, -2147483648;
	mov.u32 	%r520, 0;
	mov.u64 	%rd124, __cudart_i2opi_f;
	mov.u32 	%r519, -6;
	mov.u64 	%rd125, %rd1;

BB0_35:
	.pragma "nounroll";
	ld.const.u32 	%r264, [%rd124];
	// inline asm
	{
	mad.lo.cc.u32   %r262, %r264, %r44, %r520;
	madc.hi.u32     %r520, %r264, %r44,  0;
	}
	// inline asm
	st.local.u32 	[%rd125], %r262;
	add.s64 	%rd125, %rd125, 4;
	add.s64 	%rd124, %rd124, 4;
	add.s32 	%r519, %r519, 1;
	setp.ne.s32	%p28, %r519, 0;
	@%p28 bra 	BB0_35;

	bfe.u32 	%r267, %r43, 23, 8;
	add.s32 	%r268, %r267, -128;
	shr.u32 	%r269, %r268, 5;
	and.b32  	%r49, %r43, -2147483648;
	st.local.u32 	[%rd2], %r520;
	bfe.u32 	%r50, %r43, 23, 5;
	mov.u32 	%r270, 6;
	sub.s32 	%r271, %r270, %r269;
	mul.wide.s32 	%rd42, %r271, 4;
	add.s64 	%rd14, %rd1, %rd42;
	ld.local.u32 	%r521, [%rd14];
	ld.local.u32 	%r522, [%rd14+-4];
	setp.eq.s32	%p29, %r50, 0;
	@%p29 bra 	BB0_38;

	mov.u32 	%r272, 32;
	sub.s32 	%r273, %r272, %r50;
	shr.u32 	%r274, %r522, %r273;
	shl.b32 	%r275, %r521, %r50;
	add.s32 	%r521, %r274, %r275;
	ld.local.u32 	%r276, [%rd14+-8];
	shr.u32 	%r277, %r276, %r273;
	shl.b32 	%r278, %r522, %r50;
	add.s32 	%r522, %r277, %r278;

BB0_38:
	shr.u32 	%r279, %r522, 30;
	shl.b32 	%r280, %r521, 2;
	add.s32 	%r523, %r279, %r280;
	shl.b32 	%r58, %r522, 2;
	shr.u32 	%r281, %r523, 31;
	shr.u32 	%r282, %r521, 30;
	add.s32 	%r59, %r281, %r282;
	setp.eq.s32	%p30, %r281, 0;
	@%p30 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r524, %r49;
	mov.u32 	%r525, %r58;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r283, %r523;
	neg.s32 	%r525, %r58;
	setp.eq.s32	%p31, %r58, 0;
	selp.u32	%r284, 1, 0, %p31;
	add.s32 	%r523, %r284, %r283;
	xor.b32  	%r524, %r49, -2147483648;

BB0_41:
	clz.b32 	%r527, %r523;
	setp.eq.s32	%p32, %r527, 0;
	shl.b32 	%r285, %r523, %r527;
	mov.u32 	%r286, 32;
	sub.s32 	%r287, %r286, %r527;
	shr.u32 	%r288, %r525, %r287;
	add.s32 	%r289, %r288, %r285;
	selp.b32	%r67, %r523, %r289, %p32;
	mov.u32 	%r290, -921707870;
	mul.hi.u32 	%r526, %r67, %r290;
	setp.eq.s32	%p33, %r49, 0;
	neg.s32 	%r291, %r59;
	selp.b32	%r528, %r59, %r291, %p33;
	setp.lt.s32	%p34, %r526, 1;
	@%p34 bra 	BB0_43;

	mul.lo.s32 	%r292, %r67, -921707870;
	shr.u32 	%r293, %r292, 31;
	shl.b32 	%r294, %r526, 1;
	add.s32 	%r526, %r293, %r294;
	add.s32 	%r527, %r527, 1;

BB0_43:
	mov.u32 	%r295, 126;
	sub.s32 	%r296, %r295, %r527;
	shl.b32 	%r297, %r296, 23;
	add.s32 	%r298, %r526, 1;
	shr.u32 	%r299, %r298, 7;
	add.s32 	%r300, %r299, 1;
	shr.u32 	%r301, %r300, 1;
	add.s32 	%r302, %r301, %r297;
	or.b32  	%r303, %r302, %r524;
	mov.b32 	 %f397, %r303;

BB0_44:
	mul.rn.f32 	%f50, %f397, %f397;
	and.b32  	%r75, %r528, 1;
	setp.eq.s32	%p35, %r75, 0;
	@%p35 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f223, 0f3C08839E;
	mov.f32 	%f224, 0fB94CA1F9;
	fma.rn.f32 	%f398, %f224, %f50, %f223;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f221, 0fBAB6061A;
	mov.f32 	%f222, 0f37CCF5CE;
	fma.rn.f32 	%f398, %f222, %f50, %f221;

BB0_47:
	@%p35 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f228, 0fBE2AAAA3;
	fma.rn.f32 	%f229, %f398, %f50, %f228;
	mov.f32 	%f230, 0f00000000;
	fma.rn.f32 	%f399, %f229, %f50, %f230;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f225, 0f3D2AAAA5;
	fma.rn.f32 	%f226, %f398, %f50, %f225;
	mov.f32 	%f227, 0fBF000000;
	fma.rn.f32 	%f399, %f226, %f50, %f227;

BB0_50:
	fma.rn.f32 	%f400, %f399, %f397, %f397;
	@%p35 bra 	BB0_52;

	fma.rn.f32 	%f400, %f399, %f50, %f134;

BB0_52:
	and.b32  	%r304, %r528, 2;
	setp.eq.s32	%p38, %r304, 0;
	@%p38 bra 	BB0_54;

	mov.f32 	%f232, 0f00000000;
	mov.f32 	%f233, 0fBF800000;
	fma.rn.f32 	%f400, %f400, %f233, %f232;

BB0_54:
	abs.f32 	%f63, %f187;
	setp.neu.f32	%p39, %f63, 0f7F800000;
	mov.f32 	%f402, %f187;
	@%p39 bra 	BB0_56;

	mov.f32 	%f234, 0f00000000;
	mul.rn.f32 	%f402, %f187, %f234;

BB0_56:
	mul.f32 	%f235, %f402, 0f3F22F983;
	cvt.rni.s32.f32	%r538, %f235;
	cvt.rn.f32.s32	%f236, %r538;
	neg.f32 	%f237, %f236;
	fma.rn.f32 	%f239, %f237, %f192, %f402;
	fma.rn.f32 	%f241, %f237, %f194, %f239;
	fma.rn.f32 	%f403, %f237, %f196, %f241;
	abs.f32 	%f243, %f402;
	setp.leu.f32	%p40, %f243, 0f47CE4780;
	@%p40 bra 	BB0_67;

	mov.b32 	 %r77, %f402;
	shl.b32 	%r307, %r77, 8;
	or.b32  	%r78, %r307, -2147483648;
	mov.u32 	%r530, 0;
	mov.u64 	%rd126, __cudart_i2opi_f;
	mov.u32 	%r529, -6;
	mov.u64 	%rd127, %rd1;

BB0_58:
	.pragma "nounroll";
	ld.const.u32 	%r310, [%rd126];
	// inline asm
	{
	mad.lo.cc.u32   %r308, %r310, %r78, %r530;
	madc.hi.u32     %r530, %r310, %r78,  0;
	}
	// inline asm
	st.local.u32 	[%rd127], %r308;
	add.s64 	%rd127, %rd127, 4;
	add.s64 	%rd126, %rd126, 4;
	add.s32 	%r529, %r529, 1;
	setp.ne.s32	%p41, %r529, 0;
	@%p41 bra 	BB0_58;

	bfe.u32 	%r313, %r77, 23, 8;
	add.s32 	%r314, %r313, -128;
	shr.u32 	%r315, %r314, 5;
	and.b32  	%r83, %r77, -2147483648;
	st.local.u32 	[%rd2], %r530;
	bfe.u32 	%r84, %r77, 23, 5;
	mov.u32 	%r316, 6;
	sub.s32 	%r317, %r316, %r315;
	mul.wide.s32 	%rd44, %r317, 4;
	add.s64 	%rd19, %rd1, %rd44;
	ld.local.u32 	%r531, [%rd19];
	ld.local.u32 	%r532, [%rd19+-4];
	setp.eq.s32	%p42, %r84, 0;
	@%p42 bra 	BB0_61;

	mov.u32 	%r318, 32;
	sub.s32 	%r319, %r318, %r84;
	shr.u32 	%r320, %r532, %r319;
	shl.b32 	%r321, %r531, %r84;
	add.s32 	%r531, %r320, %r321;
	ld.local.u32 	%r322, [%rd19+-8];
	shr.u32 	%r323, %r322, %r319;
	shl.b32 	%r324, %r532, %r84;
	add.s32 	%r532, %r323, %r324;

BB0_61:
	shr.u32 	%r325, %r532, 30;
	shl.b32 	%r326, %r531, 2;
	add.s32 	%r533, %r325, %r326;
	shl.b32 	%r92, %r532, 2;
	shr.u32 	%r327, %r533, 31;
	shr.u32 	%r328, %r531, 30;
	add.s32 	%r93, %r327, %r328;
	setp.eq.s32	%p43, %r327, 0;
	@%p43 bra 	BB0_62;
	bra.uni 	BB0_63;

BB0_62:
	mov.u32 	%r534, %r83;
	mov.u32 	%r535, %r92;
	bra.uni 	BB0_64;

BB0_63:
	not.b32 	%r329, %r533;
	neg.s32 	%r535, %r92;
	setp.eq.s32	%p44, %r92, 0;
	selp.u32	%r330, 1, 0, %p44;
	add.s32 	%r533, %r330, %r329;
	xor.b32  	%r534, %r83, -2147483648;

BB0_64:
	clz.b32 	%r537, %r533;
	setp.eq.s32	%p45, %r537, 0;
	shl.b32 	%r331, %r533, %r537;
	mov.u32 	%r332, 32;
	sub.s32 	%r333, %r332, %r537;
	shr.u32 	%r334, %r535, %r333;
	add.s32 	%r335, %r334, %r331;
	selp.b32	%r101, %r533, %r335, %p45;
	mov.u32 	%r336, -921707870;
	mul.hi.u32 	%r536, %r101, %r336;
	setp.eq.s32	%p46, %r83, 0;
	neg.s32 	%r337, %r93;
	selp.b32	%r538, %r93, %r337, %p46;
	setp.lt.s32	%p47, %r536, 1;
	@%p47 bra 	BB0_66;

	mul.lo.s32 	%r338, %r101, -921707870;
	shr.u32 	%r339, %r338, 31;
	shl.b32 	%r340, %r536, 1;
	add.s32 	%r536, %r339, %r340;
	add.s32 	%r537, %r537, 1;

BB0_66:
	mov.u32 	%r341, 126;
	sub.s32 	%r342, %r341, %r537;
	shl.b32 	%r343, %r342, 23;
	add.s32 	%r344, %r536, 1;
	shr.u32 	%r345, %r344, 7;
	add.s32 	%r346, %r345, 1;
	shr.u32 	%r347, %r346, 1;
	add.s32 	%r348, %r347, %r343;
	or.b32  	%r349, %r348, %r534;
	mov.b32 	 %f403, %r349;

BB0_67:
	mul.rn.f32 	%f69, %f403, %f403;
	add.s32 	%r109, %r538, 1;
	and.b32  	%r110, %r109, 1;
	setp.eq.s32	%p48, %r110, 0;
	@%p48 bra 	BB0_69;
	bra.uni 	BB0_68;

BB0_69:
	mov.f32 	%f246, 0f3C08839E;
	mov.f32 	%f247, 0fB94CA1F9;
	fma.rn.f32 	%f404, %f247, %f69, %f246;
	bra.uni 	BB0_70;

BB0_68:
	mov.f32 	%f244, 0fBAB6061A;
	mov.f32 	%f245, 0f37CCF5CE;
	fma.rn.f32 	%f404, %f245, %f69, %f244;

BB0_70:
	@%p48 bra 	BB0_72;
	bra.uni 	BB0_71;

BB0_72:
	mov.f32 	%f251, 0fBE2AAAA3;
	fma.rn.f32 	%f252, %f404, %f69, %f251;
	mov.f32 	%f253, 0f00000000;
	fma.rn.f32 	%f405, %f252, %f69, %f253;
	bra.uni 	BB0_73;

BB0_71:
	mov.f32 	%f248, 0f3D2AAAA5;
	fma.rn.f32 	%f249, %f404, %f69, %f248;
	mov.f32 	%f250, 0fBF000000;
	fma.rn.f32 	%f405, %f249, %f69, %f250;

BB0_73:
	fma.rn.f32 	%f406, %f405, %f403, %f403;
	@%p48 bra 	BB0_75;

	fma.rn.f32 	%f406, %f405, %f69, %f134;

BB0_75:
	and.b32  	%r350, %r109, 2;
	setp.eq.s32	%p51, %r350, 0;
	@%p51 bra 	BB0_77;

	mov.f32 	%f255, 0f00000000;
	mov.f32 	%f256, 0fBF800000;
	fma.rn.f32 	%f406, %f406, %f256, %f255;

BB0_77:
	mov.f32 	%f408, %f187;
	@%p39 bra 	BB0_79;

	mov.f32 	%f257, 0f00000000;
	mul.rn.f32 	%f408, %f187, %f257;

BB0_79:
	mul.f32 	%f258, %f408, 0f3F22F983;
	cvt.rni.s32.f32	%r548, %f258;
	cvt.rn.f32.s32	%f259, %r548;
	neg.f32 	%f260, %f259;
	fma.rn.f32 	%f262, %f260, %f192, %f408;
	fma.rn.f32 	%f264, %f260, %f194, %f262;
	fma.rn.f32 	%f409, %f260, %f196, %f264;
	abs.f32 	%f266, %f408;
	setp.leu.f32	%p53, %f266, 0f47CE4780;
	@%p53 bra 	BB0_90;

	mov.b32 	 %r112, %f408;
	shl.b32 	%r353, %r112, 8;
	or.b32  	%r113, %r353, -2147483648;
	mov.u32 	%r540, 0;
	mov.u64 	%rd128, __cudart_i2opi_f;
	mov.u32 	%r539, -6;
	mov.u64 	%rd129, %rd1;

BB0_81:
	.pragma "nounroll";
	ld.const.u32 	%r356, [%rd128];
	// inline asm
	{
	mad.lo.cc.u32   %r354, %r356, %r113, %r540;
	madc.hi.u32     %r540, %r356, %r113,  0;
	}
	// inline asm
	st.local.u32 	[%rd129], %r354;
	add.s64 	%rd129, %rd129, 4;
	add.s64 	%rd128, %rd128, 4;
	add.s32 	%r539, %r539, 1;
	setp.ne.s32	%p54, %r539, 0;
	@%p54 bra 	BB0_81;

	bfe.u32 	%r359, %r112, 23, 8;
	add.s32 	%r360, %r359, -128;
	shr.u32 	%r361, %r360, 5;
	and.b32  	%r118, %r112, -2147483648;
	st.local.u32 	[%rd2], %r540;
	bfe.u32 	%r119, %r112, 23, 5;
	mov.u32 	%r362, 6;
	sub.s32 	%r363, %r362, %r361;
	mul.wide.s32 	%rd46, %r363, 4;
	add.s64 	%rd24, %rd1, %rd46;
	ld.local.u32 	%r541, [%rd24];
	ld.local.u32 	%r542, [%rd24+-4];
	setp.eq.s32	%p55, %r119, 0;
	@%p55 bra 	BB0_84;

	mov.u32 	%r364, 32;
	sub.s32 	%r365, %r364, %r119;
	shr.u32 	%r366, %r542, %r365;
	shl.b32 	%r367, %r541, %r119;
	add.s32 	%r541, %r366, %r367;
	ld.local.u32 	%r368, [%rd24+-8];
	shr.u32 	%r369, %r368, %r365;
	shl.b32 	%r370, %r542, %r119;
	add.s32 	%r542, %r369, %r370;

BB0_84:
	shr.u32 	%r371, %r542, 30;
	shl.b32 	%r372, %r541, 2;
	add.s32 	%r543, %r371, %r372;
	shl.b32 	%r127, %r542, 2;
	shr.u32 	%r373, %r543, 31;
	shr.u32 	%r374, %r541, 30;
	add.s32 	%r128, %r373, %r374;
	setp.eq.s32	%p56, %r373, 0;
	@%p56 bra 	BB0_85;
	bra.uni 	BB0_86;

BB0_85:
	mov.u32 	%r544, %r118;
	mov.u32 	%r545, %r127;
	bra.uni 	BB0_87;

BB0_86:
	not.b32 	%r375, %r543;
	neg.s32 	%r545, %r127;
	setp.eq.s32	%p57, %r127, 0;
	selp.u32	%r376, 1, 0, %p57;
	add.s32 	%r543, %r376, %r375;
	xor.b32  	%r544, %r118, -2147483648;

BB0_87:
	clz.b32 	%r547, %r543;
	setp.eq.s32	%p58, %r547, 0;
	shl.b32 	%r377, %r543, %r547;
	mov.u32 	%r378, 32;
	sub.s32 	%r379, %r378, %r547;
	shr.u32 	%r380, %r545, %r379;
	add.s32 	%r381, %r380, %r377;
	selp.b32	%r136, %r543, %r381, %p58;
	mov.u32 	%r382, -921707870;
	mul.hi.u32 	%r546, %r136, %r382;
	setp.eq.s32	%p59, %r118, 0;
	neg.s32 	%r383, %r128;
	selp.b32	%r548, %r128, %r383, %p59;
	setp.lt.s32	%p60, %r546, 1;
	@%p60 bra 	BB0_89;

	mul.lo.s32 	%r384, %r136, -921707870;
	shr.u32 	%r385, %r384, 31;
	shl.b32 	%r386, %r546, 1;
	add.s32 	%r546, %r385, %r386;
	add.s32 	%r547, %r547, 1;

BB0_89:
	mov.u32 	%r387, 126;
	sub.s32 	%r388, %r387, %r547;
	shl.b32 	%r389, %r388, 23;
	add.s32 	%r390, %r546, 1;
	shr.u32 	%r391, %r390, 7;
	add.s32 	%r392, %r391, 1;
	shr.u32 	%r393, %r392, 1;
	add.s32 	%r394, %r393, %r389;
	or.b32  	%r395, %r394, %r544;
	mov.b32 	 %f409, %r395;

BB0_90:
	mul.rn.f32 	%f86, %f409, %f409;
	and.b32  	%r144, %r548, 1;
	setp.eq.s32	%p61, %r144, 0;
	@%p61 bra 	BB0_92;
	bra.uni 	BB0_91;

BB0_92:
	mov.f32 	%f269, 0f3C08839E;
	mov.f32 	%f270, 0fB94CA1F9;
	fma.rn.f32 	%f410, %f270, %f86, %f269;
	bra.uni 	BB0_93;

BB0_91:
	mov.f32 	%f267, 0fBAB6061A;
	mov.f32 	%f268, 0f37CCF5CE;
	fma.rn.f32 	%f410, %f268, %f86, %f267;

BB0_93:
	@%p61 bra 	BB0_95;
	bra.uni 	BB0_94;

BB0_95:
	mov.f32 	%f274, 0fBE2AAAA3;
	fma.rn.f32 	%f275, %f410, %f86, %f274;
	mov.f32 	%f276, 0f00000000;
	fma.rn.f32 	%f411, %f275, %f86, %f276;
	bra.uni 	BB0_96;

BB0_94:
	mov.f32 	%f271, 0f3D2AAAA5;
	fma.rn.f32 	%f272, %f410, %f86, %f271;
	mov.f32 	%f273, 0fBF000000;
	fma.rn.f32 	%f411, %f272, %f86, %f273;

BB0_96:
	fma.rn.f32 	%f412, %f411, %f409, %f409;
	@%p61 bra 	BB0_98;

	fma.rn.f32 	%f412, %f411, %f86, %f134;

BB0_98:
	and.b32  	%r396, %r548, 2;
	setp.eq.s32	%p64, %r396, 0;
	@%p64 bra 	BB0_100;

	mov.f32 	%f278, 0f00000000;
	mov.f32 	%f279, 0fBF800000;
	fma.rn.f32 	%f412, %f412, %f279, %f278;

BB0_100:
	ld.global.f32 	%f287, [step_size];
	ld.global.u32 	%r397, [ra_entry_node];
	mul.f32 	%f284, %f400, %f412;
	mul.f32 	%f283, %f400, %f406;
	mov.u32 	%r398, 2;
	mov.f32 	%f286, 0f00000000;
	mov.u32 	%r399, 32;
	// inline asm
	call _rt_trace_64, (%r397, %f9, %f11, %f13, %f283, %f284, %f394, %r398, %f286, %f287, %rd31, %r399);
	// inline asm
	ld.global.u32 	%r400, [phase_function];
	// inline asm
	call (%rd48), _rt_callable_program_from_id_64, (%r400);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f9;
	st.param.f32	[param0+4], %f11;
	st.param.f32	[param0+8], %f13;
	.param .align 8 .b8 param1[8];
	st.param.f32	[param1+0], %f414;
	st.param.f32	[param1+4], %f187;
	.param .align 8 .b8 param2[8];
	st.param.f32	[param2+0], %f17;
	st.param.f32	[param2+4], %f18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r507;
	.param .align 8 .b8 retval0[8];
	prototype_0 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .align 8 .b8 _[8], .param .align 8 .b8 _[8], .param .b32 _);
	call (retval0), 
	%rd48, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_0;
	ld.param.f32	%f288, [retval0+0];
	ld.param.f32	%f289, [retval0+4];
	
	//{
	}// Callseq End 0
	ld.local.v2.f32 	{%f290, %f291}, [%rd3];
	mul.f32 	%f98, %f290, %f288;
	mul.f32 	%f99, %f289, %f291;
	@%p13 bra 	BB0_102;

	mul.rn.f32 	%f414, %f414, %f286;

BB0_102:
	mul.f32 	%f295, %f414, 0f3F22F983;
	cvt.rni.s32.f32	%r558, %f295;
	cvt.rn.f32.s32	%f296, %r558;
	neg.f32 	%f297, %f296;
	fma.rn.f32 	%f299, %f297, %f192, %f414;
	fma.rn.f32 	%f301, %f297, %f194, %f299;
	fma.rn.f32 	%f415, %f297, %f196, %f301;
	abs.f32 	%f303, %f414;
	setp.leu.f32	%p66, %f303, 0f47CE4780;
	@%p66 bra 	BB0_113;

	mov.b32 	 %r146, %f414;
	shr.u32 	%r147, %r146, 23;
	shl.b32 	%r403, %r146, 8;
	or.b32  	%r148, %r403, -2147483648;
	mov.u32 	%r550, 0;
	mov.u64 	%rd130, __cudart_i2opi_f;
	mov.u32 	%r549, -6;
	mov.u64 	%rd131, %rd1;

BB0_104:
	.pragma "nounroll";
	ld.const.u32 	%r406, [%rd130];
	// inline asm
	{
	mad.lo.cc.u32   %r404, %r406, %r148, %r550;
	madc.hi.u32     %r550, %r406, %r148,  0;
	}
	// inline asm
	st.local.u32 	[%rd131], %r404;
	add.s64 	%rd131, %rd131, 4;
	add.s64 	%rd130, %rd130, 4;
	add.s32 	%r549, %r549, 1;
	setp.ne.s32	%p67, %r549, 0;
	@%p67 bra 	BB0_104;

	and.b32  	%r409, %r147, 255;
	add.s32 	%r410, %r409, -128;
	shr.u32 	%r411, %r410, 5;
	and.b32  	%r153, %r146, -2147483648;
	st.local.u32 	[%rd2], %r550;
	mov.u32 	%r412, 6;
	sub.s32 	%r413, %r412, %r411;
	mul.wide.s32 	%rd50, %r413, 4;
	add.s64 	%rd29, %rd1, %rd50;
	ld.local.u32 	%r551, [%rd29];
	ld.local.u32 	%r552, [%rd29+-4];
	and.b32  	%r156, %r147, 31;
	setp.eq.s32	%p68, %r156, 0;
	@%p68 bra 	BB0_107;

	sub.s32 	%r415, %r399, %r156;
	shr.u32 	%r416, %r552, %r415;
	shl.b32 	%r417, %r551, %r156;
	add.s32 	%r551, %r416, %r417;
	ld.local.u32 	%r418, [%rd29+-8];
	shr.u32 	%r419, %r418, %r415;
	shl.b32 	%r420, %r552, %r156;
	add.s32 	%r552, %r419, %r420;

BB0_107:
	shr.u32 	%r421, %r552, 30;
	shl.b32 	%r422, %r551, 2;
	add.s32 	%r553, %r421, %r422;
	shl.b32 	%r162, %r552, 2;
	shr.u32 	%r423, %r553, 31;
	shr.u32 	%r424, %r551, 30;
	add.s32 	%r163, %r423, %r424;
	setp.eq.s32	%p69, %r423, 0;
	@%p69 bra 	BB0_108;
	bra.uni 	BB0_109;

BB0_108:
	mov.u32 	%r554, %r153;
	mov.u32 	%r555, %r162;
	bra.uni 	BB0_110;

BB0_109:
	not.b32 	%r425, %r553;
	neg.s32 	%r555, %r162;
	setp.eq.s32	%p70, %r162, 0;
	selp.u32	%r426, 1, 0, %p70;
	add.s32 	%r553, %r426, %r425;
	xor.b32  	%r554, %r153, -2147483648;

BB0_110:
	clz.b32 	%r557, %r553;
	setp.eq.s32	%p71, %r557, 0;
	shl.b32 	%r427, %r553, %r557;
	sub.s32 	%r429, %r399, %r557;
	shr.u32 	%r430, %r555, %r429;
	add.s32 	%r431, %r430, %r427;
	selp.b32	%r171, %r553, %r431, %p71;
	mov.u32 	%r432, -921707870;
	mul.hi.u32 	%r556, %r171, %r432;
	setp.eq.s32	%p72, %r153, 0;
	neg.s32 	%r433, %r163;
	selp.b32	%r558, %r163, %r433, %p72;
	setp.lt.s32	%p73, %r556, 1;
	@%p73 bra 	BB0_112;

	mul.lo.s32 	%r434, %r171, -921707870;
	shr.u32 	%r435, %r434, 31;
	shl.b32 	%r436, %r556, 1;
	add.s32 	%r556, %r435, %r436;
	add.s32 	%r557, %r557, 1;

BB0_112:
	mov.u32 	%r437, 126;
	sub.s32 	%r438, %r437, %r557;
	shl.b32 	%r439, %r438, 23;
	add.s32 	%r440, %r556, 1;
	shr.u32 	%r441, %r440, 7;
	add.s32 	%r442, %r441, 1;
	shr.u32 	%r443, %r442, 1;
	add.s32 	%r444, %r443, %r439;
	or.b32  	%r445, %r444, %r554;
	mov.b32 	 %f415, %r445;

BB0_113:
	mul.rn.f32 	%f105, %f415, %f415;
	and.b32  	%r179, %r558, 1;
	setp.eq.s32	%p74, %r179, 0;
	@%p74 bra 	BB0_115;
	bra.uni 	BB0_114;

BB0_115:
	mov.f32 	%f306, 0f3C08839E;
	mov.f32 	%f307, 0fB94CA1F9;
	fma.rn.f32 	%f416, %f307, %f105, %f306;
	bra.uni 	BB0_116;

BB0_114:
	mov.f32 	%f304, 0fBAB6061A;
	mov.f32 	%f305, 0f37CCF5CE;
	fma.rn.f32 	%f416, %f305, %f105, %f304;

BB0_116:
	@%p74 bra 	BB0_118;
	bra.uni 	BB0_117;

BB0_118:
	mov.f32 	%f311, 0fBE2AAAA3;
	fma.rn.f32 	%f312, %f416, %f105, %f311;
	fma.rn.f32 	%f417, %f312, %f105, %f286;
	bra.uni 	BB0_119;

BB0_117:
	mov.f32 	%f308, 0f3D2AAAA5;
	fma.rn.f32 	%f309, %f416, %f105, %f308;
	mov.f32 	%f310, 0fBF000000;
	fma.rn.f32 	%f417, %f309, %f105, %f310;

BB0_119:
	fma.rn.f32 	%f418, %f417, %f415, %f415;
	@%p74 bra 	BB0_121;

	fma.rn.f32 	%f418, %f417, %f105, %f134;

BB0_121:
	and.b32  	%r446, %r558, 2;
	setp.eq.s32	%p77, %r446, 0;
	@%p77 bra 	BB0_123;

	mov.f32 	%f316, 0fBF800000;
	fma.rn.f32 	%f418, %f418, %f316, %f286;

BB0_123:
	fma.rn.f32 	%f421, %f98, %f418, %f421;
	fma.rn.f32 	%f420, %f99, %f418, %f420;
	ld.global.u32 	%r559, [num_importance_directions];
	add.s32 	%r508, %r508, 1;
	setp.lt.u32	%p78, %r508, %r559;
	@%p78 bra 	BB0_8;

BB0_124:
	setp.eq.s32	%p79, %r559, 0;
	@%p79 bra 	BB0_126;

	ld.global.u32 	%r447, [scattering_factor];
	// inline asm
	call (%rd51), _rt_callable_program_from_id_64, (%r447);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f14;
	st.param.f32	[param0+4], %f15;
	st.param.f32	[param0+8], %f16;
	.param .b32 param1;
	st.param.b32	[param1+0], %r507;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd51, 
	(
	param0, 
	param1
	)
	, prototype_1;
	ld.param.f32	%f317, [retval0+0];
	ld.param.f32	%f318, [retval0+4];
	
	//{
	}// Callseq End 1

BB0_126:
	ld.global.u32 	%r448, [absorption_factor];
	// inline asm
	call (%rd52), _rt_callable_program_from_id_64, (%r448);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f14;
	st.param.f32	[param0+4], %f15;
	st.param.f32	[param0+8], %f16;
	.param .b32 param1;
	st.param.b32	[param1+0], %r507;
	.param .align 8 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd52, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.f32	%f319, [retval0+0];
	ld.param.f32	%f320, [retval0+4];
	
	//{
	}// Callseq End 2
	mul.f32 	%f321, %f7, %f319;
	neg.f32 	%f322, %f321;
	mul.f32 	%f323, %f7, %f320;
	neg.f32 	%f324, %f323;
	mul.f32 	%f325, %f321, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f326, %f325;
	mov.f32 	%f327, 0fBF317200;
	fma.rn.f32 	%f328, %f326, %f327, %f322;
	mov.f32 	%f329, 0fB5BFBE8E;
	fma.rn.f32 	%f330, %f326, %f329, %f328;
	mul.f32 	%f331, %f330, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f332, %f331;
	add.f32 	%f333, %f326, 0f00000000;
	ex2.approx.f32 	%f334, %f333;
	mul.f32 	%f335, %f332, %f334;
	setp.gt.f32	%p80, %f321, 0f42D20000;
	selp.f32	%f336, 0f00000000, %f335, %p80;
	setp.lt.f32	%p81, %f321, 0fC2D20000;
	selp.f32	%f337, 0f7F800000, %f336, %p81;
	mul.f32 	%f338, %f323, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f339, %f338;
	fma.rn.f32 	%f340, %f339, %f327, %f324;
	fma.rn.f32 	%f341, %f339, %f329, %f340;
	mul.f32 	%f342, %f341, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f343, %f342;
	add.f32 	%f344, %f339, 0f00000000;
	ex2.approx.f32 	%f345, %f344;
	mul.f32 	%f346, %f343, %f345;
	setp.gt.f32	%p82, %f323, 0f42D20000;
	selp.f32	%f347, 0f00000000, %f346, %p82;
	setp.lt.f32	%p83, %f323, 0fC2D20000;
	selp.f32	%f348, 0f7F800000, %f347, %p83;
	mul.wide.u32 	%rd54, %r507, 8;
	mov.u64 	%rd55, ray_payload;
	add.s64 	%rd56, %rd55, %rd54;
	ld.global.v2.f32 	{%f349, %f350}, [%rd56];
	ld.global.u32 	%r449, [scattering_factor];
	// inline asm
	call (%rd53), _rt_callable_program_from_id_64, (%r449);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f9;
	st.param.f32	[param0+4], %f11;
	st.param.f32	[param0+8], %f13;
	.param .b32 param1;
	st.param.b32	[param1+0], %r507;
	.param .align 8 .b8 retval0[8];
	prototype_3 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd53, 
	(
	param0, 
	param1
	)
	, prototype_3;
	ld.param.f32	%f353, [retval0+0];
	ld.param.f32	%f354, [retval0+4];
	
	//{
	}// Callseq End 3
	mul.f32 	%f355, %f421, %f353;
	mul.f32 	%f356, %f420, %f354;
	mul.f32 	%f357, %f7, %f355;
	mul.f32 	%f358, %f7, %f356;
	fma.rn.f32 	%f359, %f350, %f348, %f358;
	fma.rn.f32 	%f360, %f337, %f349, %f357;
	st.global.v2.f32 	[%rd56], {%f360, %f359};
	add.s32 	%r507, %r507, 1;
	setp.lt.u32	%p84, %r507, %r2;
	@%p84 bra 	BB0_6;

BB0_127:
	ld.global.u32 	%r450, [ray_payload+80];
	add.s32 	%r451, %r450, 1;
	st.global.u32 	[ray_payload+80], %r451;
	ld.global.u32 	%r452, [max_recursion_depth];
	setp.gt.u32	%p85, %r451, %r452;
	@%p85 bra 	BB0_135;

	ld.global.f32 	%f369, [step_size];
	mul.f32 	%f370, %f369, 0f3C23D70A;
	ld.global.f32 	%f364, [current_ray+12];
	ld.global.f32 	%f365, [current_ray+16];
	ld.global.f32 	%f366, [current_ray+20];
	fma.rn.f32 	%f361, %f364, %f370, %f9;
	fma.rn.f32 	%f362, %f370, %f365, %f11;
	fma.rn.f32 	%f363, %f370, %f366, %f13;
	ld.global.u32 	%r453, [ra_entry_node];
	mov.u64 	%rd58, ray_payload;
	cvta.global.u64 	%rd57, %rd58;
	mov.u32 	%r454, 0;
	mov.f32 	%f367, 0f00000000;
	mov.f32 	%f368, 0f6C4ECB8F;
	mov.u32 	%r455, 96;
	// inline asm
	call _rt_trace_64, (%r453, %f361, %f362, %f363, %f364, %f365, %f366, %r454, %f367, %f368, %rd57, %r455);
	// inline asm
	bra.uni 	BB0_135;

BB0_130:
	ld.global.f32 	%f379, [step_size];
	mul.f32 	%f380, %f379, 0f3C23D70A;
	fma.rn.f32 	%f371, %f1, %f380, %f9;
	fma.rn.f32 	%f372, %f380, %f2, %f11;
	fma.rn.f32 	%f373, %f380, %f3, %f13;
	add.f32 	%f378, %f380, %f379;
	ld.global.f32 	%f376, [current_ray+20];
	ld.global.f32 	%f375, [current_ray+16];
	ld.global.f32 	%f374, [current_ray+12];
	ld.global.u32 	%r459, [ra_entry_node];
	mov.u64 	%rd60, ray_payload;
	cvta.global.u64 	%rd59, %rd60;
	mov.u32 	%r460, 0;
	mov.f32 	%f377, 0f00000000;
	mov.u32 	%r461, 96;
	// inline asm
	call _rt_trace_64, (%r459, %f371, %f372, %f373, %f374, %f375, %f376, %r460, %f377, %f378, %rd59, %r461);
	// inline asm
	bra.uni 	BB0_135;

BB0_133:
	ld.global.u32 	%r560, [index];
	ld.global.u32 	%r561, [index+4];
	ld.global.u32 	%r562, [index+8];

BB0_134:
	ld.global.f32 	%f383, [current_ray+8];
	ld.global.f32 	%f382, [current_ray+4];
	ld.global.f32 	%f381, [current_ray];
	ld.global.f32 	%f386, [current_ray+20];
	ld.global.f32 	%f385, [current_ray+16];
	ld.global.f32 	%f384, [current_ray+12];
	mov.u64 	%rd121, traverse_backup_buffer;
	cvta.global.u64 	%rd62, %rd121;
	mov.u32 	%r494, 1;
	mov.u32 	%r495, 4;
	mov.u64 	%rd120, 0;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd120, %rd120, %rd120, %rd120);
	// inline asm
	atom.add.u32 	%r496, [%rd61], 1;
	mul.lo.s32 	%r497, %r496, 9;
	// inline asm
	mov.b32 	%r472, %f381;
	// inline asm
	add.s32 	%r498, %r497, 1;
	cvt.u64.u32	%rd69, %r498;
	// inline asm
	call (%rd67), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd69, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd67], %r472;
	// inline asm
	mov.b32 	%r475, %f382;
	// inline asm
	add.s32 	%r499, %r497, 2;
	cvt.u64.u32	%rd75, %r499;
	// inline asm
	call (%rd73), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd75, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd73], %r475;
	// inline asm
	mov.b32 	%r478, %f383;
	// inline asm
	add.s32 	%r500, %r497, 3;
	cvt.u64.u32	%rd81, %r500;
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd81, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd79], %r478;
	// inline asm
	mov.b32 	%r481, %f384;
	// inline asm
	add.s32 	%r501, %r497, 4;
	cvt.u64.u32	%rd87, %r501;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd87, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd85], %r481;
	// inline asm
	mov.b32 	%r484, %f385;
	// inline asm
	add.s32 	%r502, %r497, 5;
	cvt.u64.u32	%rd93, %r502;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd93, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd91], %r484;
	// inline asm
	mov.b32 	%r487, %f386;
	// inline asm
	add.s32 	%r503, %r497, 6;
	cvt.u64.u32	%rd99, %r503;
	// inline asm
	call (%rd97), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd99, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd97], %r487;
	add.s32 	%r504, %r497, 7;
	cvt.u64.u32	%rd105, %r504;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd105, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd103], %r560;
	add.s32 	%r505, %r497, 8;
	cvt.u64.u32	%rd111, %r505;
	// inline asm
	call (%rd109), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd111, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd109], %r561;
	add.s32 	%r506, %r497, 9;
	cvt.u64.u32	%rd117, %r506;
	// inline asm
	call (%rd115), _rt_buffer_get_64, (%rd62, %r494, %r495, %rd117, %rd120, %rd120, %rd120);
	// inline asm
	st.u32 	[%rd115], %r562;

BB0_135:
	ret;
}

	// .globl	_Z11__ra_miss__v
.visible .entry _Z11__ra_miss__v(

)
{
	.local .align 16 .b8 	__local_depot1[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<84>;
	.reg .f32 	%f<397>;
	.reg .b32 	%r<553>;
	.reg .b64 	%rd<131>;


	mov.u64 	%rd130, __local_depot1;
	cvta.local.u64 	%SP, %rd130;
	ld.global.u32 	%r194, [ray_payload+84];
	setp.eq.s32	%p1, %r194, 0;
	@%p1 bra 	BB1_130;

	ld.global.f32 	%f1, [step_size];
	ld.global.f32 	%f112, [current_ray+12];
	ld.global.f32 	%f113, [current_ray+16];
	ld.global.f32 	%f114, [current_ray+20];
	ld.global.f32 	%f115, [current_ray];
	fma.rn.f32 	%f2, %f1, %f112, %f115;
	ld.global.f32 	%f116, [current_ray+4];
	fma.rn.f32 	%f3, %f1, %f113, %f116;
	ld.global.f32 	%f117, [current_ray+8];
	fma.rn.f32 	%f4, %f1, %f114, %f117;
	mul.f32 	%f118, %f1, 0f3F000000;
	fma.rn.f32 	%f8, %f112, %f118, %f115;
	fma.rn.f32 	%f9, %f118, %f113, %f116;
	fma.rn.f32 	%f10, %f118, %f114, %f117;
	abs.f32 	%f119, %f114;
	mov.f32 	%f120, 0f3F800000;
	sub.f32 	%f121, %f120, %f119;
	mul.f32 	%f122, %f121, 0f3F000000;
	sqrt.rn.f32 	%f123, %f122;
	setp.gt.f32	%p2, %f119, 0f3F11EB85;
	selp.f32	%f124, %f123, %f119, %p2;
	mul.f32 	%f125, %f124, %f124;
	mov.f32 	%f126, 0f3C94D2E9;
	mov.f32 	%f127, 0f3D53F941;
	fma.rn.f32 	%f128, %f127, %f125, %f126;
	mov.f32 	%f129, 0f3D3F841F;
	fma.rn.f32 	%f130, %f128, %f125, %f129;
	mov.f32 	%f131, 0f3D994929;
	fma.rn.f32 	%f132, %f130, %f125, %f131;
	mov.f32 	%f133, 0f3E2AAB94;
	fma.rn.f32 	%f134, %f132, %f125, %f133;
	mul.f32 	%f135, %f125, %f134;
	fma.rn.f32 	%f136, %f135, %f124, %f124;
	add.f32 	%f137, %f136, %f136;
	mov.f32 	%f138, 0f3FC90FDB;
	sub.f32 	%f139, %f138, %f136;
	selp.f32	%f140, %f137, %f139, %p2;
	setp.lt.f32	%p3, %f114, 0f00000000;
	mov.f32 	%f141, 0f40490FDB;
	sub.f32 	%f142, %f141, %f140;
	selp.f32	%f11, %f142, %f140, %p3;
	mul.f32 	%f143, %f113, %f113;
	fma.rn.f32 	%f144, %f112, %f112, %f143;
	sqrt.rn.f32 	%f145, %f144;
	div.rn.f32 	%f146, %f112, %f145;
	setp.ltu.f32	%p4, %f113, 0f00000000;
	selp.f32	%f147, 0fBF800000, 0f3F800000, %p4;
	mul.f32 	%f148, %f147, %f146;
	abs.f32 	%f149, %f148;
	sub.f32 	%f150, %f120, %f149;
	mul.f32 	%f151, %f150, 0f3F000000;
	sqrt.rn.f32 	%f152, %f151;
	setp.gt.f32	%p5, %f149, 0f3F11EB85;
	selp.f32	%f153, %f152, %f149, %p5;
	mul.f32 	%f154, %f153, %f153;
	fma.rn.f32 	%f155, %f127, %f154, %f126;
	fma.rn.f32 	%f156, %f155, %f154, %f129;
	fma.rn.f32 	%f157, %f156, %f154, %f131;
	fma.rn.f32 	%f158, %f157, %f154, %f133;
	mul.f32 	%f159, %f154, %f158;
	fma.rn.f32 	%f160, %f159, %f153, %f153;
	add.f32 	%f161, %f160, %f160;
	sub.f32 	%f162, %f138, %f160;
	selp.f32	%f163, %f161, %f162, %p5;
	setp.lt.f32	%p6, %f148, 0f00000000;
	sub.f32 	%f164, %f141, %f163;
	selp.f32	%f165, %f164, %f163, %p6;
	setp.lt.f32	%p7, %f113, 0f00000000;
	selp.f32	%f166, 0f40490FDB, 0f00000000, %p7;
	add.f32 	%f12, %f166, %f165;
	ld.global.f32 	%f167, [ray_payload+68];
	add.f32 	%f168, %f1, %f167;
	st.global.f32 	[ray_payload+68], %f168;
	ld.global.u32 	%r195, [num_spectra_pairs_supported];
	mov.u32 	%r196, 8;
	min.u32 	%r1, %r196, %r195;
	setp.eq.s32	%p8, %r1, 0;
	@%p8 bra 	BB1_124;

	add.s32 	%r2, %r1, 1;
	add.u64 	%rd30, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd30;
	add.s64 	%rd2, %rd1, 24;
	add.u64 	%rd31, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd31;
	mov.u32 	%r197, 0;
	mov.u32 	%r497, %r197;

BB1_3:
	ld.global.u32 	%r199, [num_importance_directions];
	setp.eq.s32	%p9, %r199, 0;
	mov.f32 	%f395, 0f00000000;
	mov.u32 	%r549, %r197;
	mov.f32 	%f396, %f395;
	@%p9 bra 	BB1_121;

	add.s32 	%r4, %r497, 1;
	mov.f32 	%f172, 0f00000000;
	mov.u32 	%r498, 0;
	mov.f32 	%f395, %f172;
	mov.f32 	%f396, %f172;

BB1_5:
	st.local.v2.f32 	[%rd3], {%f172, %f172};
	mul.lo.s32 	%r203, %r498, %r2;
	add.s32 	%r204, %r4, %r203;
	st.local.v2.u32 	[%rd3+24], {%r204, %r497};
	ld.global.v2.u32 	{%r205, %r206}, [ray_payload+80];
	add.s32 	%r209, %r205, 1;
	st.local.v2.u32 	[%rd3+16], {%r209, %r206};
	cvt.u64.u32	%rd34, %r203;
	mov.u64 	%rd38, importance_directions_buffer;
	cvta.global.u64 	%rd33, %rd38;
	mov.u32 	%r201, 1;
	mov.u64 	%rd37, 0;
	// inline asm
	call (%rd32), _rt_buffer_get_64, (%rd33, %r201, %r196, %rd34, %rd37, %rd37, %rd37);
	// inline asm
	ld.v2.f32 	{%f389, %f175}, [%rd32];
	abs.f32 	%f18, %f389;
	setp.neu.f32	%p10, %f18, 0f7F800000;
	mov.f32 	%f365, %f389;
	@%p10 bra 	BB1_7;

	mov.f32 	%f176, 0f00000000;
	mul.rn.f32 	%f365, %f389, %f176;

BB1_7:
	mul.f32 	%f177, %f365, 0f3F22F983;
	cvt.rni.s32.f32	%r508, %f177;
	cvt.rn.f32.s32	%f178, %r508;
	neg.f32 	%f179, %f178;
	mov.f32 	%f180, 0f3FC90FDA;
	fma.rn.f32 	%f181, %f179, %f180, %f365;
	mov.f32 	%f182, 0f33A22168;
	fma.rn.f32 	%f183, %f179, %f182, %f181;
	mov.f32 	%f184, 0f27C234C5;
	fma.rn.f32 	%f366, %f179, %f184, %f183;
	abs.f32 	%f185, %f365;
	setp.leu.f32	%p11, %f185, 0f47CE4780;
	@%p11 bra 	BB1_18;

	mov.b32 	 %r7, %f365;
	shl.b32 	%r212, %r7, 8;
	or.b32  	%r8, %r212, -2147483648;
	mov.u32 	%r500, 0;
	mov.u64 	%rd120, __cudart_i2opi_f;
	mov.u32 	%r499, -6;
	mov.u64 	%rd121, %rd1;

BB1_9:
	.pragma "nounroll";
	ld.const.u32 	%r215, [%rd120];
	// inline asm
	{
	mad.lo.cc.u32   %r213, %r215, %r8, %r500;
	madc.hi.u32     %r500, %r215, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd121], %r213;
	add.s64 	%rd121, %rd121, 4;
	add.s64 	%rd120, %rd120, 4;
	add.s32 	%r499, %r499, 1;
	setp.ne.s32	%p12, %r499, 0;
	@%p12 bra 	BB1_9;

	bfe.u32 	%r218, %r7, 23, 8;
	add.s32 	%r219, %r218, -128;
	shr.u32 	%r220, %r219, 5;
	and.b32  	%r13, %r7, -2147483648;
	st.local.u32 	[%rd2], %r500;
	bfe.u32 	%r14, %r7, 23, 5;
	mov.u32 	%r221, 6;
	sub.s32 	%r222, %r221, %r220;
	mul.wide.s32 	%rd40, %r222, 4;
	add.s64 	%rd9, %rd1, %rd40;
	ld.local.u32 	%r501, [%rd9];
	ld.local.u32 	%r502, [%rd9+-4];
	setp.eq.s32	%p13, %r14, 0;
	@%p13 bra 	BB1_12;

	mov.u32 	%r223, 32;
	sub.s32 	%r224, %r223, %r14;
	shr.u32 	%r225, %r502, %r224;
	shl.b32 	%r226, %r501, %r14;
	add.s32 	%r501, %r225, %r226;
	ld.local.u32 	%r227, [%rd9+-8];
	shr.u32 	%r228, %r227, %r224;
	shl.b32 	%r229, %r502, %r14;
	add.s32 	%r502, %r228, %r229;

BB1_12:
	shr.u32 	%r230, %r502, 30;
	shl.b32 	%r231, %r501, 2;
	add.s32 	%r503, %r230, %r231;
	shl.b32 	%r22, %r502, 2;
	shr.u32 	%r232, %r503, 31;
	shr.u32 	%r233, %r501, 30;
	add.s32 	%r23, %r232, %r233;
	setp.eq.s32	%p14, %r232, 0;
	@%p14 bra 	BB1_13;
	bra.uni 	BB1_14;

BB1_13:
	mov.u32 	%r504, %r13;
	mov.u32 	%r505, %r22;
	bra.uni 	BB1_15;

BB1_14:
	not.b32 	%r234, %r503;
	neg.s32 	%r505, %r22;
	setp.eq.s32	%p15, %r22, 0;
	selp.u32	%r235, 1, 0, %p15;
	add.s32 	%r503, %r235, %r234;
	xor.b32  	%r504, %r13, -2147483648;

BB1_15:
	clz.b32 	%r507, %r503;
	setp.eq.s32	%p16, %r507, 0;
	shl.b32 	%r236, %r503, %r507;
	mov.u32 	%r237, 32;
	sub.s32 	%r238, %r237, %r507;
	shr.u32 	%r239, %r505, %r238;
	add.s32 	%r240, %r239, %r236;
	selp.b32	%r31, %r503, %r240, %p16;
	mov.u32 	%r241, -921707870;
	mul.hi.u32 	%r506, %r31, %r241;
	setp.eq.s32	%p17, %r13, 0;
	neg.s32 	%r242, %r23;
	selp.b32	%r508, %r23, %r242, %p17;
	setp.lt.s32	%p18, %r506, 1;
	@%p18 bra 	BB1_17;

	mul.lo.s32 	%r243, %r31, -921707870;
	shr.u32 	%r244, %r243, 31;
	shl.b32 	%r245, %r506, 1;
	add.s32 	%r506, %r244, %r245;
	add.s32 	%r507, %r507, 1;

BB1_17:
	mov.u32 	%r246, 126;
	sub.s32 	%r247, %r246, %r507;
	shl.b32 	%r248, %r247, 23;
	add.s32 	%r249, %r506, 1;
	shr.u32 	%r250, %r249, 7;
	add.s32 	%r251, %r250, 1;
	shr.u32 	%r252, %r251, 1;
	add.s32 	%r253, %r252, %r248;
	or.b32  	%r254, %r253, %r504;
	mov.b32 	 %f366, %r254;

BB1_18:
	mul.rn.f32 	%f24, %f366, %f366;
	add.s32 	%r39, %r508, 1;
	and.b32  	%r40, %r39, 1;
	setp.eq.s32	%p19, %r40, 0;
	@%p19 bra 	BB1_20;
	bra.uni 	BB1_19;

BB1_20:
	mov.f32 	%f188, 0f3C08839E;
	mov.f32 	%f189, 0fB94CA1F9;
	fma.rn.f32 	%f367, %f189, %f24, %f188;
	bra.uni 	BB1_21;

BB1_19:
	mov.f32 	%f186, 0fBAB6061A;
	mov.f32 	%f187, 0f37CCF5CE;
	fma.rn.f32 	%f367, %f187, %f24, %f186;

BB1_21:
	@%p19 bra 	BB1_23;
	bra.uni 	BB1_22;

BB1_23:
	mov.f32 	%f193, 0fBE2AAAA3;
	fma.rn.f32 	%f194, %f367, %f24, %f193;
	mov.f32 	%f195, 0f00000000;
	fma.rn.f32 	%f368, %f194, %f24, %f195;
	bra.uni 	BB1_24;

BB1_22:
	mov.f32 	%f190, 0f3D2AAAA5;
	fma.rn.f32 	%f191, %f367, %f24, %f190;
	mov.f32 	%f192, 0fBF000000;
	fma.rn.f32 	%f368, %f191, %f24, %f192;

BB1_24:
	fma.rn.f32 	%f369, %f368, %f366, %f366;
	@%p19 bra 	BB1_26;

	fma.rn.f32 	%f369, %f368, %f24, %f120;

BB1_26:
	and.b32  	%r255, %r39, 2;
	setp.eq.s32	%p22, %r255, 0;
	@%p22 bra 	BB1_28;

	mov.f32 	%f197, 0f00000000;
	mov.f32 	%f198, 0fBF800000;
	fma.rn.f32 	%f369, %f369, %f198, %f197;

BB1_28:
	mov.f32 	%f371, %f389;
	@%p10 bra 	BB1_30;

	mov.f32 	%f199, 0f00000000;
	mul.rn.f32 	%f371, %f389, %f199;

BB1_30:
	mul.f32 	%f200, %f371, 0f3F22F983;
	cvt.rni.s32.f32	%r518, %f200;
	cvt.rn.f32.s32	%f201, %r518;
	neg.f32 	%f202, %f201;
	fma.rn.f32 	%f204, %f202, %f180, %f371;
	fma.rn.f32 	%f206, %f202, %f182, %f204;
	fma.rn.f32 	%f372, %f202, %f184, %f206;
	abs.f32 	%f208, %f371;
	setp.leu.f32	%p24, %f208, 0f47CE4780;
	@%p24 bra 	BB1_41;

	mov.b32 	 %r42, %f371;
	shl.b32 	%r258, %r42, 8;
	or.b32  	%r43, %r258, -2147483648;
	mov.u32 	%r510, 0;
	mov.u64 	%rd122, __cudart_i2opi_f;
	mov.u32 	%r509, -6;
	mov.u64 	%rd123, %rd1;

BB1_32:
	.pragma "nounroll";
	ld.const.u32 	%r261, [%rd122];
	// inline asm
	{
	mad.lo.cc.u32   %r259, %r261, %r43, %r510;
	madc.hi.u32     %r510, %r261, %r43,  0;
	}
	// inline asm
	st.local.u32 	[%rd123], %r259;
	add.s64 	%rd123, %rd123, 4;
	add.s64 	%rd122, %rd122, 4;
	add.s32 	%r509, %r509, 1;
	setp.ne.s32	%p25, %r509, 0;
	@%p25 bra 	BB1_32;

	bfe.u32 	%r264, %r42, 23, 8;
	add.s32 	%r265, %r264, -128;
	shr.u32 	%r266, %r265, 5;
	and.b32  	%r48, %r42, -2147483648;
	st.local.u32 	[%rd2], %r510;
	bfe.u32 	%r49, %r42, 23, 5;
	mov.u32 	%r267, 6;
	sub.s32 	%r268, %r267, %r266;
	mul.wide.s32 	%rd42, %r268, 4;
	add.s64 	%rd14, %rd1, %rd42;
	ld.local.u32 	%r511, [%rd14];
	ld.local.u32 	%r512, [%rd14+-4];
	setp.eq.s32	%p26, %r49, 0;
	@%p26 bra 	BB1_35;

	mov.u32 	%r269, 32;
	sub.s32 	%r270, %r269, %r49;
	shr.u32 	%r271, %r512, %r270;
	shl.b32 	%r272, %r511, %r49;
	add.s32 	%r511, %r271, %r272;
	ld.local.u32 	%r273, [%rd14+-8];
	shr.u32 	%r274, %r273, %r270;
	shl.b32 	%r275, %r512, %r49;
	add.s32 	%r512, %r274, %r275;

BB1_35:
	shr.u32 	%r276, %r512, 30;
	shl.b32 	%r277, %r511, 2;
	add.s32 	%r513, %r276, %r277;
	shl.b32 	%r57, %r512, 2;
	shr.u32 	%r278, %r513, 31;
	shr.u32 	%r279, %r511, 30;
	add.s32 	%r58, %r278, %r279;
	setp.eq.s32	%p27, %r278, 0;
	@%p27 bra 	BB1_36;
	bra.uni 	BB1_37;

BB1_36:
	mov.u32 	%r514, %r48;
	mov.u32 	%r515, %r57;
	bra.uni 	BB1_38;

BB1_37:
	not.b32 	%r280, %r513;
	neg.s32 	%r515, %r57;
	setp.eq.s32	%p28, %r57, 0;
	selp.u32	%r281, 1, 0, %p28;
	add.s32 	%r513, %r281, %r280;
	xor.b32  	%r514, %r48, -2147483648;

BB1_38:
	clz.b32 	%r517, %r513;
	setp.eq.s32	%p29, %r517, 0;
	shl.b32 	%r282, %r513, %r517;
	mov.u32 	%r283, 32;
	sub.s32 	%r284, %r283, %r517;
	shr.u32 	%r285, %r515, %r284;
	add.s32 	%r286, %r285, %r282;
	selp.b32	%r66, %r513, %r286, %p29;
	mov.u32 	%r287, -921707870;
	mul.hi.u32 	%r516, %r66, %r287;
	setp.eq.s32	%p30, %r48, 0;
	neg.s32 	%r288, %r58;
	selp.b32	%r518, %r58, %r288, %p30;
	setp.lt.s32	%p31, %r516, 1;
	@%p31 bra 	BB1_40;

	mul.lo.s32 	%r289, %r66, -921707870;
	shr.u32 	%r290, %r289, 31;
	shl.b32 	%r291, %r516, 1;
	add.s32 	%r516, %r290, %r291;
	add.s32 	%r517, %r517, 1;

BB1_40:
	mov.u32 	%r292, 126;
	sub.s32 	%r293, %r292, %r517;
	shl.b32 	%r294, %r293, 23;
	add.s32 	%r295, %r516, 1;
	shr.u32 	%r296, %r295, 7;
	add.s32 	%r297, %r296, 1;
	shr.u32 	%r298, %r297, 1;
	add.s32 	%r299, %r298, %r294;
	or.b32  	%r300, %r299, %r514;
	mov.b32 	 %f372, %r300;

BB1_41:
	mul.rn.f32 	%f41, %f372, %f372;
	and.b32  	%r74, %r518, 1;
	setp.eq.s32	%p32, %r74, 0;
	@%p32 bra 	BB1_43;
	bra.uni 	BB1_42;

BB1_43:
	mov.f32 	%f211, 0f3C08839E;
	mov.f32 	%f212, 0fB94CA1F9;
	fma.rn.f32 	%f373, %f212, %f41, %f211;
	bra.uni 	BB1_44;

BB1_42:
	mov.f32 	%f209, 0fBAB6061A;
	mov.f32 	%f210, 0f37CCF5CE;
	fma.rn.f32 	%f373, %f210, %f41, %f209;

BB1_44:
	@%p32 bra 	BB1_46;
	bra.uni 	BB1_45;

BB1_46:
	mov.f32 	%f216, 0fBE2AAAA3;
	fma.rn.f32 	%f217, %f373, %f41, %f216;
	mov.f32 	%f218, 0f00000000;
	fma.rn.f32 	%f374, %f217, %f41, %f218;
	bra.uni 	BB1_47;

BB1_45:
	mov.f32 	%f213, 0f3D2AAAA5;
	fma.rn.f32 	%f214, %f373, %f41, %f213;
	mov.f32 	%f215, 0fBF000000;
	fma.rn.f32 	%f374, %f214, %f41, %f215;

BB1_47:
	fma.rn.f32 	%f375, %f374, %f372, %f372;
	@%p32 bra 	BB1_49;

	fma.rn.f32 	%f375, %f374, %f41, %f120;

BB1_49:
	and.b32  	%r301, %r518, 2;
	setp.eq.s32	%p35, %r301, 0;
	@%p35 bra 	BB1_51;

	mov.f32 	%f220, 0f00000000;
	mov.f32 	%f221, 0fBF800000;
	fma.rn.f32 	%f375, %f375, %f221, %f220;

BB1_51:
	abs.f32 	%f54, %f175;
	setp.neu.f32	%p36, %f54, 0f7F800000;
	mov.f32 	%f377, %f175;
	@%p36 bra 	BB1_53;

	mov.f32 	%f222, 0f00000000;
	mul.rn.f32 	%f377, %f175, %f222;

BB1_53:
	mul.f32 	%f223, %f377, 0f3F22F983;
	cvt.rni.s32.f32	%r528, %f223;
	cvt.rn.f32.s32	%f224, %r528;
	neg.f32 	%f225, %f224;
	fma.rn.f32 	%f227, %f225, %f180, %f377;
	fma.rn.f32 	%f229, %f225, %f182, %f227;
	fma.rn.f32 	%f378, %f225, %f184, %f229;
	abs.f32 	%f231, %f377;
	setp.leu.f32	%p37, %f231, 0f47CE4780;
	@%p37 bra 	BB1_64;

	mov.b32 	 %r76, %f377;
	shl.b32 	%r304, %r76, 8;
	or.b32  	%r77, %r304, -2147483648;
	mov.u32 	%r520, 0;
	mov.u64 	%rd124, __cudart_i2opi_f;
	mov.u32 	%r519, -6;
	mov.u64 	%rd125, %rd1;

BB1_55:
	.pragma "nounroll";
	ld.const.u32 	%r307, [%rd124];
	// inline asm
	{
	mad.lo.cc.u32   %r305, %r307, %r77, %r520;
	madc.hi.u32     %r520, %r307, %r77,  0;
	}
	// inline asm
	st.local.u32 	[%rd125], %r305;
	add.s64 	%rd125, %rd125, 4;
	add.s64 	%rd124, %rd124, 4;
	add.s32 	%r519, %r519, 1;
	setp.ne.s32	%p38, %r519, 0;
	@%p38 bra 	BB1_55;

	bfe.u32 	%r310, %r76, 23, 8;
	add.s32 	%r311, %r310, -128;
	shr.u32 	%r312, %r311, 5;
	and.b32  	%r82, %r76, -2147483648;
	st.local.u32 	[%rd2], %r520;
	bfe.u32 	%r83, %r76, 23, 5;
	mov.u32 	%r313, 6;
	sub.s32 	%r314, %r313, %r312;
	mul.wide.s32 	%rd44, %r314, 4;
	add.s64 	%rd19, %rd1, %rd44;
	ld.local.u32 	%r521, [%rd19];
	ld.local.u32 	%r522, [%rd19+-4];
	setp.eq.s32	%p39, %r83, 0;
	@%p39 bra 	BB1_58;

	mov.u32 	%r315, 32;
	sub.s32 	%r316, %r315, %r83;
	shr.u32 	%r317, %r522, %r316;
	shl.b32 	%r318, %r521, %r83;
	add.s32 	%r521, %r317, %r318;
	ld.local.u32 	%r319, [%rd19+-8];
	shr.u32 	%r320, %r319, %r316;
	shl.b32 	%r321, %r522, %r83;
	add.s32 	%r522, %r320, %r321;

BB1_58:
	shr.u32 	%r322, %r522, 30;
	shl.b32 	%r323, %r521, 2;
	add.s32 	%r523, %r322, %r323;
	shl.b32 	%r91, %r522, 2;
	shr.u32 	%r324, %r523, 31;
	shr.u32 	%r325, %r521, 30;
	add.s32 	%r92, %r324, %r325;
	setp.eq.s32	%p40, %r324, 0;
	@%p40 bra 	BB1_59;
	bra.uni 	BB1_60;

BB1_59:
	mov.u32 	%r524, %r82;
	mov.u32 	%r525, %r91;
	bra.uni 	BB1_61;

BB1_60:
	not.b32 	%r326, %r523;
	neg.s32 	%r525, %r91;
	setp.eq.s32	%p41, %r91, 0;
	selp.u32	%r327, 1, 0, %p41;
	add.s32 	%r523, %r327, %r326;
	xor.b32  	%r524, %r82, -2147483648;

BB1_61:
	clz.b32 	%r527, %r523;
	setp.eq.s32	%p42, %r527, 0;
	shl.b32 	%r328, %r523, %r527;
	mov.u32 	%r329, 32;
	sub.s32 	%r330, %r329, %r527;
	shr.u32 	%r331, %r525, %r330;
	add.s32 	%r332, %r331, %r328;
	selp.b32	%r100, %r523, %r332, %p42;
	mov.u32 	%r333, -921707870;
	mul.hi.u32 	%r526, %r100, %r333;
	setp.eq.s32	%p43, %r82, 0;
	neg.s32 	%r334, %r92;
	selp.b32	%r528, %r92, %r334, %p43;
	setp.lt.s32	%p44, %r526, 1;
	@%p44 bra 	BB1_63;

	mul.lo.s32 	%r335, %r100, -921707870;
	shr.u32 	%r336, %r335, 31;
	shl.b32 	%r337, %r526, 1;
	add.s32 	%r526, %r336, %r337;
	add.s32 	%r527, %r527, 1;

BB1_63:
	mov.u32 	%r338, 126;
	sub.s32 	%r339, %r338, %r527;
	shl.b32 	%r340, %r339, 23;
	add.s32 	%r341, %r526, 1;
	shr.u32 	%r342, %r341, 7;
	add.s32 	%r343, %r342, 1;
	shr.u32 	%r344, %r343, 1;
	add.s32 	%r345, %r344, %r340;
	or.b32  	%r346, %r345, %r524;
	mov.b32 	 %f378, %r346;

BB1_64:
	mul.rn.f32 	%f60, %f378, %f378;
	add.s32 	%r108, %r528, 1;
	and.b32  	%r109, %r108, 1;
	setp.eq.s32	%p45, %r109, 0;
	@%p45 bra 	BB1_66;
	bra.uni 	BB1_65;

BB1_66:
	mov.f32 	%f234, 0f3C08839E;
	mov.f32 	%f235, 0fB94CA1F9;
	fma.rn.f32 	%f379, %f235, %f60, %f234;
	bra.uni 	BB1_67;

BB1_65:
	mov.f32 	%f232, 0fBAB6061A;
	mov.f32 	%f233, 0f37CCF5CE;
	fma.rn.f32 	%f379, %f233, %f60, %f232;

BB1_67:
	@%p45 bra 	BB1_69;
	bra.uni 	BB1_68;

BB1_69:
	mov.f32 	%f239, 0fBE2AAAA3;
	fma.rn.f32 	%f240, %f379, %f60, %f239;
	mov.f32 	%f241, 0f00000000;
	fma.rn.f32 	%f380, %f240, %f60, %f241;
	bra.uni 	BB1_70;

BB1_68:
	mov.f32 	%f236, 0f3D2AAAA5;
	fma.rn.f32 	%f237, %f379, %f60, %f236;
	mov.f32 	%f238, 0fBF000000;
	fma.rn.f32 	%f380, %f237, %f60, %f238;

BB1_70:
	fma.rn.f32 	%f381, %f380, %f378, %f378;
	@%p45 bra 	BB1_72;

	fma.rn.f32 	%f381, %f380, %f60, %f120;

BB1_72:
	and.b32  	%r347, %r108, 2;
	setp.eq.s32	%p48, %r347, 0;
	@%p48 bra 	BB1_74;

	mov.f32 	%f243, 0f00000000;
	mov.f32 	%f244, 0fBF800000;
	fma.rn.f32 	%f381, %f381, %f244, %f243;

BB1_74:
	mov.f32 	%f383, %f175;
	@%p36 bra 	BB1_76;

	mov.f32 	%f245, 0f00000000;
	mul.rn.f32 	%f383, %f175, %f245;

BB1_76:
	mul.f32 	%f246, %f383, 0f3F22F983;
	cvt.rni.s32.f32	%r538, %f246;
	cvt.rn.f32.s32	%f247, %r538;
	neg.f32 	%f248, %f247;
	fma.rn.f32 	%f250, %f248, %f180, %f383;
	fma.rn.f32 	%f252, %f248, %f182, %f250;
	fma.rn.f32 	%f384, %f248, %f184, %f252;
	abs.f32 	%f254, %f383;
	setp.leu.f32	%p50, %f254, 0f47CE4780;
	@%p50 bra 	BB1_87;

	mov.b32 	 %r111, %f383;
	shl.b32 	%r350, %r111, 8;
	or.b32  	%r112, %r350, -2147483648;
	mov.u32 	%r530, 0;
	mov.u64 	%rd126, __cudart_i2opi_f;
	mov.u32 	%r529, -6;
	mov.u64 	%rd127, %rd1;

BB1_78:
	.pragma "nounroll";
	ld.const.u32 	%r353, [%rd126];
	// inline asm
	{
	mad.lo.cc.u32   %r351, %r353, %r112, %r530;
	madc.hi.u32     %r530, %r353, %r112,  0;
	}
	// inline asm
	st.local.u32 	[%rd127], %r351;
	add.s64 	%rd127, %rd127, 4;
	add.s64 	%rd126, %rd126, 4;
	add.s32 	%r529, %r529, 1;
	setp.ne.s32	%p51, %r529, 0;
	@%p51 bra 	BB1_78;

	bfe.u32 	%r356, %r111, 23, 8;
	add.s32 	%r357, %r356, -128;
	shr.u32 	%r358, %r357, 5;
	and.b32  	%r117, %r111, -2147483648;
	st.local.u32 	[%rd2], %r530;
	bfe.u32 	%r118, %r111, 23, 5;
	mov.u32 	%r359, 6;
	sub.s32 	%r360, %r359, %r358;
	mul.wide.s32 	%rd46, %r360, 4;
	add.s64 	%rd24, %rd1, %rd46;
	ld.local.u32 	%r531, [%rd24];
	ld.local.u32 	%r532, [%rd24+-4];
	setp.eq.s32	%p52, %r118, 0;
	@%p52 bra 	BB1_81;

	mov.u32 	%r361, 32;
	sub.s32 	%r362, %r361, %r118;
	shr.u32 	%r363, %r532, %r362;
	shl.b32 	%r364, %r531, %r118;
	add.s32 	%r531, %r363, %r364;
	ld.local.u32 	%r365, [%rd24+-8];
	shr.u32 	%r366, %r365, %r362;
	shl.b32 	%r367, %r532, %r118;
	add.s32 	%r532, %r366, %r367;

BB1_81:
	shr.u32 	%r368, %r532, 30;
	shl.b32 	%r369, %r531, 2;
	add.s32 	%r533, %r368, %r369;
	shl.b32 	%r126, %r532, 2;
	shr.u32 	%r370, %r533, 31;
	shr.u32 	%r371, %r531, 30;
	add.s32 	%r127, %r370, %r371;
	setp.eq.s32	%p53, %r370, 0;
	@%p53 bra 	BB1_82;
	bra.uni 	BB1_83;

BB1_82:
	mov.u32 	%r534, %r117;
	mov.u32 	%r535, %r126;
	bra.uni 	BB1_84;

BB1_83:
	not.b32 	%r372, %r533;
	neg.s32 	%r535, %r126;
	setp.eq.s32	%p54, %r126, 0;
	selp.u32	%r373, 1, 0, %p54;
	add.s32 	%r533, %r373, %r372;
	xor.b32  	%r534, %r117, -2147483648;

BB1_84:
	clz.b32 	%r537, %r533;
	setp.eq.s32	%p55, %r537, 0;
	shl.b32 	%r374, %r533, %r537;
	mov.u32 	%r375, 32;
	sub.s32 	%r376, %r375, %r537;
	shr.u32 	%r377, %r535, %r376;
	add.s32 	%r378, %r377, %r374;
	selp.b32	%r135, %r533, %r378, %p55;
	mov.u32 	%r379, -921707870;
	mul.hi.u32 	%r536, %r135, %r379;
	setp.eq.s32	%p56, %r117, 0;
	neg.s32 	%r380, %r127;
	selp.b32	%r538, %r127, %r380, %p56;
	setp.lt.s32	%p57, %r536, 1;
	@%p57 bra 	BB1_86;

	mul.lo.s32 	%r381, %r135, -921707870;
	shr.u32 	%r382, %r381, 31;
	shl.b32 	%r383, %r536, 1;
	add.s32 	%r536, %r382, %r383;
	add.s32 	%r537, %r537, 1;

BB1_86:
	mov.u32 	%r384, 126;
	sub.s32 	%r385, %r384, %r537;
	shl.b32 	%r386, %r385, 23;
	add.s32 	%r387, %r536, 1;
	shr.u32 	%r388, %r387, 7;
	add.s32 	%r389, %r388, 1;
	shr.u32 	%r390, %r389, 1;
	add.s32 	%r391, %r390, %r386;
	or.b32  	%r392, %r391, %r534;
	mov.b32 	 %f384, %r392;

BB1_87:
	mul.rn.f32 	%f77, %f384, %f384;
	and.b32  	%r143, %r538, 1;
	setp.eq.s32	%p58, %r143, 0;
	@%p58 bra 	BB1_89;
	bra.uni 	BB1_88;

BB1_89:
	mov.f32 	%f257, 0f3C08839E;
	mov.f32 	%f258, 0fB94CA1F9;
	fma.rn.f32 	%f385, %f258, %f77, %f257;
	bra.uni 	BB1_90;

BB1_88:
	mov.f32 	%f255, 0fBAB6061A;
	mov.f32 	%f256, 0f37CCF5CE;
	fma.rn.f32 	%f385, %f256, %f77, %f255;

BB1_90:
	@%p58 bra 	BB1_92;
	bra.uni 	BB1_91;

BB1_92:
	mov.f32 	%f262, 0fBE2AAAA3;
	fma.rn.f32 	%f263, %f385, %f77, %f262;
	mov.f32 	%f264, 0f00000000;
	fma.rn.f32 	%f386, %f263, %f77, %f264;
	bra.uni 	BB1_93;

BB1_91:
	mov.f32 	%f259, 0f3D2AAAA5;
	fma.rn.f32 	%f260, %f385, %f77, %f259;
	mov.f32 	%f261, 0fBF000000;
	fma.rn.f32 	%f386, %f260, %f77, %f261;

BB1_93:
	fma.rn.f32 	%f387, %f386, %f384, %f384;
	@%p58 bra 	BB1_95;

	fma.rn.f32 	%f387, %f386, %f77, %f120;

BB1_95:
	and.b32  	%r393, %r538, 2;
	setp.eq.s32	%p61, %r393, 0;
	@%p61 bra 	BB1_97;

	mov.f32 	%f266, 0f00000000;
	mov.f32 	%f267, 0fBF800000;
	fma.rn.f32 	%f387, %f387, %f267, %f266;

BB1_97:
	ld.global.f32 	%f275, [step_size];
	ld.global.u32 	%r394, [ra_entry_node];
	mul.f32 	%f272, %f375, %f387;
	mul.f32 	%f271, %f375, %f381;
	mov.u32 	%r395, 2;
	mov.f32 	%f274, 0f00000000;
	mov.u32 	%r396, 32;
	// inline asm
	call _rt_trace_64, (%r394, %f2, %f3, %f4, %f271, %f272, %f369, %r395, %f274, %f275, %rd31, %r396);
	// inline asm
	ld.global.u32 	%r397, [phase_function];
	// inline asm
	call (%rd48), _rt_callable_program_from_id_64, (%r397);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f2;
	st.param.f32	[param0+4], %f3;
	st.param.f32	[param0+8], %f4;
	.param .align 8 .b8 param1[8];
	st.param.f32	[param1+0], %f389;
	st.param.f32	[param1+4], %f175;
	.param .align 8 .b8 param2[8];
	st.param.f32	[param2+0], %f11;
	st.param.f32	[param2+4], %f12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r497;
	.param .align 8 .b8 retval0[8];
	prototype_4 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .align 8 .b8 _[8], .param .align 8 .b8 _[8], .param .b32 _);
	call (retval0), 
	%rd48, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_4;
	ld.param.f32	%f276, [retval0+0];
	ld.param.f32	%f277, [retval0+4];
	
	//{
	}// Callseq End 4
	ld.local.v2.f32 	{%f278, %f279}, [%rd3];
	mul.f32 	%f89, %f278, %f276;
	mul.f32 	%f90, %f277, %f279;
	@%p10 bra 	BB1_99;

	mul.rn.f32 	%f389, %f389, %f274;

BB1_99:
	mul.f32 	%f283, %f389, 0f3F22F983;
	cvt.rni.s32.f32	%r548, %f283;
	cvt.rn.f32.s32	%f284, %r548;
	neg.f32 	%f285, %f284;
	fma.rn.f32 	%f287, %f285, %f180, %f389;
	fma.rn.f32 	%f289, %f285, %f182, %f287;
	fma.rn.f32 	%f390, %f285, %f184, %f289;
	abs.f32 	%f291, %f389;
	setp.leu.f32	%p63, %f291, 0f47CE4780;
	@%p63 bra 	BB1_110;

	mov.b32 	 %r145, %f389;
	shr.u32 	%r146, %r145, 23;
	shl.b32 	%r400, %r145, 8;
	or.b32  	%r147, %r400, -2147483648;
	mov.u32 	%r540, 0;
	mov.u64 	%rd128, __cudart_i2opi_f;
	mov.u32 	%r539, -6;
	mov.u64 	%rd129, %rd1;

BB1_101:
	.pragma "nounroll";
	ld.const.u32 	%r403, [%rd128];
	// inline asm
	{
	mad.lo.cc.u32   %r401, %r403, %r147, %r540;
	madc.hi.u32     %r540, %r403, %r147,  0;
	}
	// inline asm
	st.local.u32 	[%rd129], %r401;
	add.s64 	%rd129, %rd129, 4;
	add.s64 	%rd128, %rd128, 4;
	add.s32 	%r539, %r539, 1;
	setp.ne.s32	%p64, %r539, 0;
	@%p64 bra 	BB1_101;

	and.b32  	%r406, %r146, 255;
	add.s32 	%r407, %r406, -128;
	shr.u32 	%r408, %r407, 5;
	and.b32  	%r152, %r145, -2147483648;
	st.local.u32 	[%rd2], %r540;
	mov.u32 	%r409, 6;
	sub.s32 	%r410, %r409, %r408;
	mul.wide.s32 	%rd50, %r410, 4;
	add.s64 	%rd29, %rd1, %rd50;
	ld.local.u32 	%r541, [%rd29];
	ld.local.u32 	%r542, [%rd29+-4];
	and.b32  	%r155, %r146, 31;
	setp.eq.s32	%p65, %r155, 0;
	@%p65 bra 	BB1_104;

	sub.s32 	%r412, %r396, %r155;
	shr.u32 	%r413, %r542, %r412;
	shl.b32 	%r414, %r541, %r155;
	add.s32 	%r541, %r413, %r414;
	ld.local.u32 	%r415, [%rd29+-8];
	shr.u32 	%r416, %r415, %r412;
	shl.b32 	%r417, %r542, %r155;
	add.s32 	%r542, %r416, %r417;

BB1_104:
	shr.u32 	%r418, %r542, 30;
	shl.b32 	%r419, %r541, 2;
	add.s32 	%r543, %r418, %r419;
	shl.b32 	%r161, %r542, 2;
	shr.u32 	%r420, %r543, 31;
	shr.u32 	%r421, %r541, 30;
	add.s32 	%r162, %r420, %r421;
	setp.eq.s32	%p66, %r420, 0;
	@%p66 bra 	BB1_105;
	bra.uni 	BB1_106;

BB1_105:
	mov.u32 	%r544, %r152;
	mov.u32 	%r545, %r161;
	bra.uni 	BB1_107;

BB1_106:
	not.b32 	%r422, %r543;
	neg.s32 	%r545, %r161;
	setp.eq.s32	%p67, %r161, 0;
	selp.u32	%r423, 1, 0, %p67;
	add.s32 	%r543, %r423, %r422;
	xor.b32  	%r544, %r152, -2147483648;

BB1_107:
	clz.b32 	%r547, %r543;
	setp.eq.s32	%p68, %r547, 0;
	shl.b32 	%r424, %r543, %r547;
	sub.s32 	%r426, %r396, %r547;
	shr.u32 	%r427, %r545, %r426;
	add.s32 	%r428, %r427, %r424;
	selp.b32	%r170, %r543, %r428, %p68;
	mov.u32 	%r429, -921707870;
	mul.hi.u32 	%r546, %r170, %r429;
	setp.eq.s32	%p69, %r152, 0;
	neg.s32 	%r430, %r162;
	selp.b32	%r548, %r162, %r430, %p69;
	setp.lt.s32	%p70, %r546, 1;
	@%p70 bra 	BB1_109;

	mul.lo.s32 	%r431, %r170, -921707870;
	shr.u32 	%r432, %r431, 31;
	shl.b32 	%r433, %r546, 1;
	add.s32 	%r546, %r432, %r433;
	add.s32 	%r547, %r547, 1;

BB1_109:
	mov.u32 	%r434, 126;
	sub.s32 	%r435, %r434, %r547;
	shl.b32 	%r436, %r435, 23;
	add.s32 	%r437, %r546, 1;
	shr.u32 	%r438, %r437, 7;
	add.s32 	%r439, %r438, 1;
	shr.u32 	%r440, %r439, 1;
	add.s32 	%r441, %r440, %r436;
	or.b32  	%r442, %r441, %r544;
	mov.b32 	 %f390, %r442;

BB1_110:
	mul.rn.f32 	%f96, %f390, %f390;
	and.b32  	%r178, %r548, 1;
	setp.eq.s32	%p71, %r178, 0;
	@%p71 bra 	BB1_112;
	bra.uni 	BB1_111;

BB1_112:
	mov.f32 	%f294, 0f3C08839E;
	mov.f32 	%f295, 0fB94CA1F9;
	fma.rn.f32 	%f391, %f295, %f96, %f294;
	bra.uni 	BB1_113;

BB1_111:
	mov.f32 	%f292, 0fBAB6061A;
	mov.f32 	%f293, 0f37CCF5CE;
	fma.rn.f32 	%f391, %f293, %f96, %f292;

BB1_113:
	@%p71 bra 	BB1_115;
	bra.uni 	BB1_114;

BB1_115:
	mov.f32 	%f299, 0fBE2AAAA3;
	fma.rn.f32 	%f300, %f391, %f96, %f299;
	fma.rn.f32 	%f392, %f300, %f96, %f274;
	bra.uni 	BB1_116;

BB1_114:
	mov.f32 	%f296, 0f3D2AAAA5;
	fma.rn.f32 	%f297, %f391, %f96, %f296;
	mov.f32 	%f298, 0fBF000000;
	fma.rn.f32 	%f392, %f297, %f96, %f298;

BB1_116:
	fma.rn.f32 	%f393, %f392, %f390, %f390;
	@%p71 bra 	BB1_118;

	fma.rn.f32 	%f393, %f392, %f96, %f120;

BB1_118:
	and.b32  	%r443, %r548, 2;
	setp.eq.s32	%p74, %r443, 0;
	@%p74 bra 	BB1_120;

	mov.f32 	%f304, 0fBF800000;
	fma.rn.f32 	%f393, %f393, %f304, %f274;

BB1_120:
	fma.rn.f32 	%f396, %f89, %f393, %f396;
	fma.rn.f32 	%f395, %f90, %f393, %f395;
	ld.global.u32 	%r549, [num_importance_directions];
	add.s32 	%r498, %r498, 1;
	setp.lt.u32	%p75, %r498, %r549;
	@%p75 bra 	BB1_5;

BB1_121:
	setp.eq.s32	%p76, %r549, 0;
	@%p76 bra 	BB1_123;

	ld.global.u32 	%r444, [scattering_factor];
	// inline asm
	call (%rd51), _rt_callable_program_from_id_64, (%r444);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f8;
	st.param.f32	[param0+4], %f9;
	st.param.f32	[param0+8], %f10;
	.param .b32 param1;
	st.param.b32	[param1+0], %r497;
	.param .align 8 .b8 retval0[8];
	prototype_5 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd51, 
	(
	param0, 
	param1
	)
	, prototype_5;
	ld.param.f32	%f305, [retval0+0];
	ld.param.f32	%f306, [retval0+4];
	
	//{
	}// Callseq End 5

BB1_123:
	ld.global.u32 	%r445, [absorption_factor];
	// inline asm
	call (%rd52), _rt_callable_program_from_id_64, (%r445);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f8;
	st.param.f32	[param0+4], %f9;
	st.param.f32	[param0+8], %f10;
	.param .b32 param1;
	st.param.b32	[param1+0], %r497;
	.param .align 8 .b8 retval0[8];
	prototype_6 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd52, 
	(
	param0, 
	param1
	)
	, prototype_6;
	ld.param.f32	%f307, [retval0+0];
	ld.param.f32	%f308, [retval0+4];
	
	//{
	}// Callseq End 6
	mul.f32 	%f309, %f1, %f307;
	neg.f32 	%f310, %f309;
	mul.f32 	%f311, %f1, %f308;
	neg.f32 	%f312, %f311;
	mul.f32 	%f313, %f309, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f314, %f313;
	mov.f32 	%f315, 0fBF317200;
	fma.rn.f32 	%f316, %f314, %f315, %f310;
	mov.f32 	%f317, 0fB5BFBE8E;
	fma.rn.f32 	%f318, %f314, %f317, %f316;
	mul.f32 	%f319, %f318, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f320, %f319;
	add.f32 	%f321, %f314, 0f00000000;
	ex2.approx.f32 	%f322, %f321;
	mul.f32 	%f323, %f320, %f322;
	setp.gt.f32	%p77, %f309, 0f42D20000;
	selp.f32	%f324, 0f00000000, %f323, %p77;
	setp.lt.f32	%p78, %f309, 0fC2D20000;
	selp.f32	%f325, 0f7F800000, %f324, %p78;
	mul.f32 	%f326, %f311, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f327, %f326;
	fma.rn.f32 	%f328, %f327, %f315, %f312;
	fma.rn.f32 	%f329, %f327, %f317, %f328;
	mul.f32 	%f330, %f329, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f331, %f330;
	add.f32 	%f332, %f327, 0f00000000;
	ex2.approx.f32 	%f333, %f332;
	mul.f32 	%f334, %f331, %f333;
	setp.gt.f32	%p79, %f311, 0f42D20000;
	selp.f32	%f335, 0f00000000, %f334, %p79;
	setp.lt.f32	%p80, %f311, 0fC2D20000;
	selp.f32	%f336, 0f7F800000, %f335, %p80;
	mul.wide.u32 	%rd54, %r497, 8;
	mov.u64 	%rd55, ray_payload;
	add.s64 	%rd56, %rd55, %rd54;
	ld.global.v2.f32 	{%f337, %f338}, [%rd56];
	ld.global.u32 	%r446, [scattering_factor];
	// inline asm
	call (%rd53), _rt_callable_program_from_id_64, (%r446);
	// inline asm
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f2;
	st.param.f32	[param0+4], %f3;
	st.param.f32	[param0+8], %f4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r497;
	.param .align 8 .b8 retval0[8];
	prototype_7 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd53, 
	(
	param0, 
	param1
	)
	, prototype_7;
	ld.param.f32	%f341, [retval0+0];
	ld.param.f32	%f342, [retval0+4];
	
	//{
	}// Callseq End 7
	mul.f32 	%f343, %f396, %f341;
	mul.f32 	%f344, %f395, %f342;
	mul.f32 	%f345, %f1, %f343;
	mul.f32 	%f346, %f1, %f344;
	fma.rn.f32 	%f347, %f338, %f336, %f346;
	fma.rn.f32 	%f348, %f325, %f337, %f345;
	st.global.v2.f32 	[%rd56], {%f348, %f347};
	add.s32 	%r497, %r497, 1;
	setp.lt.u32	%p81, %r497, %r1;
	@%p81 bra 	BB1_3;

BB1_124:
	ld.global.u32 	%r447, [max_recursion_depth];
	ld.global.u32 	%r183, [ray_payload+80];
	setp.gt.u32	%p82, %r183, %r447;
	@%p82 bra 	BB1_126;
	bra.uni 	BB1_125;

BB1_126:
	mov.u32 	%r452, 0;
	st.global.u32 	[ray_payload+80], %r452;
	ld.global.u32 	%r184, [ray_payload+88];
	setp.eq.s32	%p83, %r184, 0;
	@%p83 bra 	BB1_128;

	add.s32 	%r453, %r184, -1;
	ld.global.u32 	%r454, [problem_size+4];
	ld.global.u32 	%r455, [problem_size];
	mul.lo.s32 	%r456, %r454, %r455;
	div.u32 	%r550, %r453, %r456;
	mul.lo.s32 	%r457, %r456, %r550;
	sub.s32 	%r458, %r453, %r457;
	div.u32 	%r551, %r458, %r455;
	mul.lo.s32 	%r459, %r551, %r455;
	sub.s32 	%r552, %r458, %r459;
	bra.uni 	BB1_129;

BB1_125:
	add.s32 	%r451, %r183, 1;
	mov.u64 	%rd58, ray_payload;
	st.global.u32 	[ray_payload+80], %r451;
	ld.global.f32 	%f356, [step_size];
	ld.global.f32 	%f354, [current_ray+20];
	ld.global.f32 	%f353, [current_ray+16];
	ld.global.f32 	%f352, [current_ray+12];
	ld.global.u32 	%r448, [ra_entry_node];
	cvta.global.u64 	%rd57, %rd58;
	mov.u32 	%r449, 0;
	mov.f32 	%f355, 0f00000000;
	mov.u32 	%r450, 96;
	// inline asm
	call _rt_trace_64, (%r448, %f2, %f3, %f4, %f352, %f353, %f354, %r449, %f355, %f356, %rd57, %r450);
	// inline asm
	bra.uni 	BB1_130;

BB1_128:
	ld.global.u32 	%r552, [index];
	ld.global.u32 	%r551, [index+4];
	ld.global.u32 	%r550, [index+8];

BB1_129:
	ld.global.f32 	%f362, [current_ray+20];
	ld.global.f32 	%f361, [current_ray+16];
	ld.global.f32 	%f360, [current_ray+12];
	mov.u64 	%rd119, traverse_backup_buffer;
	cvta.global.u64 	%rd60, %rd119;
	mov.u32 	%r484, 1;
	mov.u32 	%r485, 4;
	mov.u64 	%rd118, 0;
	// inline asm
	call (%rd59), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd118, %rd118, %rd118, %rd118);
	// inline asm
	atom.add.u32 	%r486, [%rd59], 1;
	mul.lo.s32 	%r487, %r486, 9;
	// inline asm
	mov.b32 	%r462, %f2;
	// inline asm
	add.s32 	%r488, %r487, 1;
	cvt.u64.u32	%rd67, %r488;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd67, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd65], %r462;
	// inline asm
	mov.b32 	%r465, %f3;
	// inline asm
	add.s32 	%r489, %r487, 2;
	cvt.u64.u32	%rd73, %r489;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd73, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd71], %r465;
	// inline asm
	mov.b32 	%r468, %f4;
	// inline asm
	add.s32 	%r490, %r487, 3;
	cvt.u64.u32	%rd79, %r490;
	// inline asm
	call (%rd77), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd79, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd77], %r468;
	// inline asm
	mov.b32 	%r471, %f360;
	// inline asm
	add.s32 	%r491, %r487, 4;
	cvt.u64.u32	%rd85, %r491;
	// inline asm
	call (%rd83), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd85, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd83], %r471;
	// inline asm
	mov.b32 	%r474, %f361;
	// inline asm
	add.s32 	%r492, %r487, 5;
	cvt.u64.u32	%rd91, %r492;
	// inline asm
	call (%rd89), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd91, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd89], %r474;
	// inline asm
	mov.b32 	%r477, %f362;
	// inline asm
	add.s32 	%r493, %r487, 6;
	cvt.u64.u32	%rd97, %r493;
	// inline asm
	call (%rd95), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd97, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd95], %r477;
	add.s32 	%r494, %r487, 7;
	cvt.u64.u32	%rd103, %r494;
	// inline asm
	call (%rd101), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd103, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd101], %r552;
	add.s32 	%r495, %r487, 8;
	cvt.u64.u32	%rd109, %r495;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd109, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd107], %r551;
	add.s32 	%r496, %r487, 9;
	cvt.u64.u32	%rd115, %r496;
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd60, %r484, %r485, %rd115, %rd118, %rd118, %rd118);
	// inline asm
	st.u32 	[%rd113], %r550;

BB1_130:
	ret;
}

	// .globl	_Z28__ra_closest_hit_scattered__v
.visible .entry _Z28__ra_closest_hit_scattered__v(

)
{
	.reg .f32 	%f<5>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<8>;


	ld.global.u32 	%rd3, [ray_payload_scattered+24];
	mov.u64 	%rd7, importance_directions_buffer;
	cvta.global.u64 	%rd2, %rd7;
	mov.u32 	%r1, 1;
	mov.u32 	%r2, 8;
	mov.u64 	%rd6, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd6, %rd6, %rd6);
	// inline asm
	ld.v2.f32 	{%f1, %f2}, [%rd1];
	st.global.v2.f32 	[ray_payload_scattered], {%f1, %f2};
	ret;
}

	// .globl	_Z21__ra_miss_scattered__v
.visible .entry _Z21__ra_miss_scattered__v(

)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.global.u32 	%r3, [ray_payload_scattered+16];
	add.s32 	%r1, %r3, 1;
	st.global.u32 	[ray_payload_scattered+16], %r1;
	ld.global.u32 	%r2, [max_recursion_depth];
	setp.gt.u32	%p1, %r1, %r2;
	@%p1 bra 	BB3_2;

	ld.global.f32 	%f9, [step_size];
	ld.global.f32 	%f4, [current_ray+12];
	ld.global.f32 	%f5, [current_ray+16];
	ld.global.f32 	%f6, [current_ray+20];
	ld.global.f32 	%f10, [current_ray];
	fma.rn.f32 	%f1, %f9, %f4, %f10;
	ld.global.f32 	%f11, [current_ray+4];
	fma.rn.f32 	%f2, %f9, %f5, %f11;
	ld.global.f32 	%f12, [current_ray+8];
	fma.rn.f32 	%f3, %f9, %f6, %f12;
	mul.f32 	%f13, %f9, 0f3F000000;
	fma.rn.f32 	%f14, %f4, %f13, %f10;
	fma.rn.f32 	%f15, %f13, %f5, %f11;
	fma.rn.f32 	%f16, %f13, %f6, %f12;
	setp.lt.u32	%p2, %r1, %r2;
	selp.f32	%f8, %f9, 0f6C4ECB8F, %p2;
	ld.global.u32 	%r4, [ra_entry_node];
	mov.u64 	%rd3, ray_payload_scattered;
	cvta.global.u64 	%rd1, %rd3;
	mov.u32 	%r5, 2;
	mov.f32 	%f7, 0f00000000;
	mov.u32 	%r6, 32;
	// inline asm
	call _rt_trace_64, (%r4, %f1, %f2, %f3, %f4, %f5, %f6, %r5, %f7, %f8, %rd1, %r6);
	// inline asm
	ld.global.u32 	%r8, [ray_payload_scattered+28];
	ld.global.u32 	%r7, [absorption_factor];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f14;
	st.param.f32	[param0+4], %f15;
	st.param.f32	[param0+8], %f16;
	.param .b32 param1;
	st.param.b32	[param1+0], %r8;
	.param .align 8 .b8 retval0[8];
	prototype_8 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd2, 
	(
	param0, 
	param1
	)
	, prototype_8;
	ld.param.f32	%f17, [retval0+0];
	ld.param.f32	%f18, [retval0+4];
	
	//{
	}// Callseq End 8
	ld.global.f32 	%f19, [step_size];
	mul.f32 	%f20, %f17, %f19;
	neg.f32 	%f21, %f20;
	mul.f32 	%f22, %f18, %f19;
	neg.f32 	%f23, %f22;
	mul.f32 	%f24, %f20, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f25, %f24;
	mov.f32 	%f26, 0fBF317200;
	fma.rn.f32 	%f27, %f25, %f26, %f21;
	mov.f32 	%f28, 0fB5BFBE8E;
	fma.rn.f32 	%f29, %f25, %f28, %f27;
	mul.f32 	%f30, %f29, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f31, %f30;
	add.f32 	%f32, %f25, 0f00000000;
	ex2.approx.f32 	%f33, %f32;
	mul.f32 	%f34, %f31, %f33;
	setp.gt.f32	%p3, %f20, 0f42D20000;
	selp.f32	%f35, 0f00000000, %f34, %p3;
	setp.lt.f32	%p4, %f20, 0fC2D20000;
	selp.f32	%f36, 0f7F800000, %f35, %p4;
	mul.f32 	%f37, %f22, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f38, %f37;
	fma.rn.f32 	%f39, %f38, %f26, %f23;
	fma.rn.f32 	%f40, %f38, %f28, %f39;
	mul.f32 	%f41, %f40, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f42, %f41;
	add.f32 	%f43, %f38, 0f00000000;
	ex2.approx.f32 	%f44, %f43;
	mul.f32 	%f45, %f42, %f44;
	setp.gt.f32	%p5, %f22, 0f42D20000;
	selp.f32	%f46, 0f00000000, %f45, %p5;
	setp.lt.f32	%p6, %f22, 0fC2D20000;
	selp.f32	%f47, 0f7F800000, %f46, %p6;
	ld.global.v2.f32 	{%f48, %f49}, [ray_payload_scattered];
	mul.f32 	%f51, %f49, %f47;
	mul.f32 	%f53, %f36, %f48;
	st.global.v2.f32 	[ray_payload_scattered], {%f53, %f51};

BB3_2:
	ret;
}



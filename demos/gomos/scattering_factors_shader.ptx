//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_60
.address_size 64

	// .weak	cudaMalloc
.visible .global .align 8 .b8 planet_location[8];
.visible .global .align 4 .f32 planet_radius;
.visible .global .align 4 .f32 atmosphere_thickness;
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo15planet_locationE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo13planet_radiusE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo20atmosphere_thicknessE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 8 .b8 _ZN21rti_internal_typename15planet_locationE[7] = {102, 108, 111, 97, 116, 50, 0};
.visible .global .align 8 .b8 _ZN21rti_internal_typename13planet_radiusE[6] = {102, 108, 111, 97, 116, 0};
.visible .global .align 8 .b8 _ZN21rti_internal_typename20atmosphere_thicknessE[6] = {102, 108, 111, 97, 116, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum15planet_locationE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum13planet_radiusE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum20atmosphere_thicknessE = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic15planet_locationE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic13planet_radiusE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic20atmosphere_thicknessE[1];
.visible .global .align 16 .b8 _ZN23rti_internal_annotation15planet_locationE[39] = {34, 76, 111, 99, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 99, 101, 110, 116, 101, 114, 32, 111, 102, 32, 116, 104, 101, 32, 112, 108, 97, 110, 101, 116, 34, 0};
.visible .global .align 16 .b8 _ZN23rti_internal_annotation13planet_radiusE[23] = {34, 82, 97, 100, 105, 117, 115, 32, 111, 102, 32, 116, 104, 101, 32, 112, 108, 97, 110, 101, 116, 34, 0};
.visible .global .align 16 .b8 _ZN23rti_internal_annotation20atmosphere_thicknessE[30] = {34, 84, 104, 105, 99, 107, 110, 101, 115, 115, 32, 111, 102, 32, 116, 104, 101, 32, 97, 116, 109, 111, 115, 112, 104, 101, 114, 101, 34, 0};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z28exponential_decay_absorption6float3j
.visible .func  (.param .align 8 .b8 func_retval0[8]) _Z28exponential_decay_absorption6float3j(
	.param .align 4 .b8 _Z28exponential_decay_absorption6float3j_param_0[12],
	.param .b32 _Z28exponential_decay_absorption6float3j_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<41>;


	ld.param.f32 	%f1, [_Z28exponential_decay_absorption6float3j_param_0+4];
	ld.param.f32 	%f2, [_Z28exponential_decay_absorption6float3j_param_0];
	ld.global.v2.f32 	{%f3, %f4}, [planet_location];
	sub.f32 	%f6, %f2, %f3;
	sub.f32 	%f8, %f1, %f4;
	mul.f32 	%f9, %f8, %f8;
	fma.rn.f32 	%f10, %f6, %f6, %f9;
	sqrt.rn.f32 	%f11, %f10;
	ld.global.f32 	%f12, [planet_radius];
	sub.f32 	%f13, %f11, %f12;
	ld.global.f32 	%f14, [atmosphere_thickness];
	sub.f32 	%f15, %f14, %f13;
	mul.f32 	%f16, %f15, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f17, %f16;
	mov.f32 	%f18, 0fBF317200;
	fma.rn.f32 	%f19, %f17, %f18, %f15;
	mov.f32 	%f20, 0fB5BFBE8E;
	fma.rn.f32 	%f21, %f17, %f20, %f19;
	mul.f32 	%f22, %f21, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f23, %f22;
	add.f32 	%f24, %f17, 0f00000000;
	ex2.approx.f32 	%f25, %f24;
	mul.f32 	%f26, %f23, %f25;
	setp.lt.f32	%p1, %f15, 0fC2D20000;
	selp.f32	%f27, 0f00000000, %f26, %p1;
	setp.gt.f32	%p2, %f15, 0f42D20000;
	selp.f32	%f28, 0f7F800000, %f27, %p2;
	add.f32 	%f29, %f15, %f15;
	mul.f32 	%f30, %f29, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f31, %f30;
	fma.rn.f32 	%f32, %f31, %f18, %f29;
	fma.rn.f32 	%f33, %f31, %f20, %f32;
	mul.f32 	%f34, %f33, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f35, %f34;
	add.f32 	%f36, %f31, 0f00000000;
	ex2.approx.f32 	%f37, %f36;
	mul.f32 	%f38, %f35, %f37;
	setp.lt.f32	%p3, %f29, 0fC2D20000;
	selp.f32	%f39, 0f00000000, %f38, %p3;
	setp.gt.f32	%p4, %f29, 0f42D20000;
	selp.f32	%f40, 0f7F800000, %f39, %p4;
	st.param.f32	[func_retval0+0], %f28;
	st.param.f32	[func_retval0+4], %f40;
	ret;
}



function output = postprocess(raw_results_path, base_name, nwaves_per_ray)
% INPUT PARAMETERS
% raw_results_path    path to raw results produced by the RA library
%
% base_name           base name of variables stored in the resutls file.
%                     This name is the prefix attached to each variable
%                     generated by the RA library and is controlled by the
%                     MatlabV4 data store agent save(...) routine
%
% nwaves_per_ray      number of wavelengths carried per ray. This input is
%                     optional and defaults to 16, which is the maximum
%                     supported by RA currently (but check as this
%                     limitation is planned to be increased in future)
%
% OUTPUT PARAMETERS
% output    postprocessed results

mfile = matfile(raw_results_path);
if nargin < 3
    nwaves_per_ray = 16;
end

step = 1;
running_name = strcat(base_name, num2str(step), '__spectral_radiance');
spectral_radiance_processed = [];
while(isprop(mfile, running_name))
    current_spectral_radiance_data = mfile.(running_name);
    
    num_rays = size(current_spectral_radiance_data, 1)/nwaves_per_ray;
    spectral_radiance_processed_chunk = zeros(num_rays, nwaves_per_ray);
    for wave_length = 0:nwaves_per_ray-1
        spectral_radiance_processed_chunk(:,wave_length+1) = ...
            current_spectral_radiance_data(1+wave_length:nwaves_per_ray:end);
    end
    spectral_radiance_processed = [spectral_radiance_processed, ...
        spectral_radiance_processed_chunk];
    
    step = step + 1;
    running_name = strcat(base_name, num2str(step), '__spectral_radiance');
end

output.spectral_radiance = spectral_radiance_processed;

end


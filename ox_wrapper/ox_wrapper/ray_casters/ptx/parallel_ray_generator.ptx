//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_50
.address_size 64

	// .globl	_Z15__ox_generate__v
.global .align 4 .b8 ox_entry_node[4];
.global .align 4 .u32 num_rays;
.global .align 4 .f32 emitter_position;
.global .align 4 .f32 emitter_size;
.global .align 4 .f32 emitter_rotation;
.global .align 4 .u32 num_spectra_pairs_supported;
.global .align 4 .u32 index;
.global .align 1 .b8 ox_output_buffer[1];
.global .align 1 .b8 ox_init_flux_buffer[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo13ox_entry_nodeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8num_raysE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16emitter_positionE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12emitter_sizeE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16emitter_rotationE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo27num_spectra_pairs_supportedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo5indexE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename13ox_entry_nodeE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename8num_raysE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16emitter_positionE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12emitter_sizeE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename16emitter_rotationE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename27num_spectra_pairs_supportedE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename5indexE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum13ox_entry_nodeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8num_raysE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16emitter_positionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12emitter_sizeE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum16emitter_rotationE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum27num_spectra_pairs_supportedE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum5indexE = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic13ox_entry_nodeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8num_raysE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16emitter_positionE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12emitter_sizeE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16emitter_rotationE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic27num_spectra_pairs_supportedE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic5indexE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation13ox_entry_nodeE[19] = {34, 83, 99, 101, 110, 101, 32, 101, 110, 116, 114, 121, 32, 110, 111, 100, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation8num_raysE[24] = {34, 78, 117, 109, 98, 101, 114, 32, 111, 102, 32, 99, 97, 115, 116, 101, 100, 32, 114, 97, 121, 115, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation16emitter_positionE[26] = {34, 80, 111, 115, 105, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 101, 109, 105, 116, 116, 101, 114, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation12emitter_sizeE[22] = {34, 83, 105, 122, 101, 32, 111, 102, 32, 116, 104, 101, 32, 101, 109, 105, 116, 116, 101, 114, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation16emitter_rotationE[26] = {34, 82, 111, 116, 97, 116, 105, 111, 110, 32, 111, 102, 32, 116, 104, 101, 32, 101, 109, 105, 116, 116, 101, 114, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation27num_spectra_pairs_supportedE[31] = {34, 78, 117, 109, 98, 101, 114, 32, 111, 102, 32, 119, 97, 118, 101, 108, 101, 110, 103, 116, 104, 115, 32, 105, 110, 32, 117, 115, 101, 34, 0};
.global .align 16 .b8 _ZN23rti_internal_annotation5indexE[15] = {34, 84, 104, 114, 101, 97, 100, 32, 105, 110, 100, 101, 120, 34, 0};

.visible .entry _Z15__ox_generate__v(

)
{
	.local .align 16 .b8 	__local_depot0[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<59>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<46>;


	mov.u64 	%rd45, __local_depot0;
	cvta.local.u64 	%SP, %rd45;
	add.u64 	%rd22, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd22;
	ld.global.f32 	%f5, [emitter_size];
	neg.ftz.f32 	%f6, %f5;
	mov.f32 	%f7, 0f40000000;
	div.approx.ftz.f32 	%f8, %f6, %f7;
	ld.global.u32 	%r3, [num_rays];
	add.s32 	%r4, %r3, -1;
	cvt.rn.f32.u32	%f9, %r4;
	div.approx.ftz.f32 	%f10, %f5, %f9;
	ld.global.u32 	%r5, [index];
	cvt.rn.f32.u32	%f11, %r5;
	fma.rn.ftz.f32 	%f12, %f10, %f11, %f8;
	ld.global.f32 	%f13, [emitter_rotation];
	cos.approx.ftz.f32 	%f1, %f13;
	sin.approx.ftz.f32 	%f14, %f13;
	mul.ftz.f32 	%f15, %f1, %f12;
	mul.ftz.f32 	%f16, %f14, 0f00000000;
	sub.ftz.f32 	%f2, %f15, %f16;
	mul.ftz.f32 	%f17, %f14, %f2;
	fma.rn.ftz.f32 	%f3, %f1, 0f00000000, %f17;
	neg.ftz.f32 	%f4, %f14;
	ld.global.u32 	%r6, [num_spectra_pairs_supported];
	mov.u32 	%r2, 8;
	min.u32 	%r7, %r2, %r6;
	mov.u32 	%r8, 0;
	st.local.v4.u32 	[%rd2+64], {%r8, %r8, %r8, %r8};
	mov.f32 	%f18, 0f00000000;
	st.local.v4.f32 	[%rd2+48], {%f18, %f18, %f18, %f18};
	st.local.v4.f32 	[%rd2+32], {%f18, %f18, %f18, %f18};
	st.local.v4.f32 	[%rd2+16], {%f18, %f18, %f18, %f18};
	st.local.v4.f32 	[%rd2], {%f18, %f18, %f18, %f18};
	mul.lo.s32 	%r9, %r7, %r5;
	cvt.u64.u32	%rd17, %r9;
	mov.u64 	%rd23, ox_init_flux_buffer;
	cvta.global.u64 	%rd16, %rd23;
	mov.u32 	%r1, 1;
	mov.u64 	%rd43, 0;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r1, %r2, %rd17, %rd43, %rd43, %rd43);
	// inline asm
	mul.wide.u32 	%rd4, %r7, 8;
	shr.u64 	%rd5, %rd4, 4;
	setp.eq.s64	%p1, %rd5, 0;
	@%p1 bra 	BB0_2;

BB0_1:
	shl.b64 	%rd24, %rd43, 4;
	add.s64 	%rd25, %rd15, %rd24;
	ld.v2.u64 	{%rd26, %rd27}, [%rd25];
	add.s64 	%rd30, %rd2, %rd24;
	st.local.v2.u64 	[%rd30], {%rd26, %rd27};
	add.s64 	%rd43, %rd43, 1;
	setp.lt.u64	%p2, %rd43, %rd5;
	@%p2 bra 	BB0_1;

BB0_2:
	and.b64  	%rd10, %rd4, 15;
	shl.b64 	%rd32, %rd5, 4;
	add.s64 	%rd11, %rd15, %rd32;
	add.s64 	%rd12, %rd2, %rd32;
	mov.u64 	%rd44, 0;
	setp.eq.s64	%p3, %rd10, 0;
	@%p3 bra 	BB0_4;

BB0_3:
	add.s64 	%rd33, %rd11, %rd44;
	ld.u8 	%rs1, [%rd33];
	add.s64 	%rd34, %rd12, %rd44;
	st.local.u8 	[%rd34], %rs1;
	add.s64 	%rd44, %rd44, 1;
	setp.lt.u64	%p4, %rd44, %rd10;
	@%p4 bra 	BB0_3;

BB0_4:
	st.local.v4.u32 	[%rd2+64], {%r8, %r8, %r8, %r8};
	ld.global.u32 	%r10, [ox_entry_node];
	mov.f32 	%f26, 0f6C4ECB8F;
	mov.u32 	%r14, 80;
	// inline asm
	call _rt_trace_64, (%r10, %f2, %f3, %f18, %f4, %f1, %f18, %r8, %f18, %f26, %rd22, %r14);
	// inline asm
	ld.global.u32 	%rd38, [index];
	mov.u64 	%rd42, ox_output_buffer;
	cvta.global.u64 	%rd37, %rd42;
	mov.u64 	%rd41, 0;
	// inline asm
	call (%rd36), _rt_buffer_get_64, (%rd37, %r1, %r14, %rd38, %rd41, %rd41, %rd41);
	// inline asm
	ld.local.v4.f32 	{%f27, %f28, %f29, %f30}, [%rd2];
	ld.local.v4.f32 	{%f31, %f32, %f33, %f34}, [%rd2+16];
	ld.local.v4.f32 	{%f35, %f36, %f37, %f38}, [%rd2+32];
	ld.local.v4.f32 	{%f39, %f40, %f41, %f42}, [%rd2+48];
	ld.local.v4.u32 	{%r15, %r16, %r17, %r18}, [%rd2+64];
	st.v4.u32 	[%rd36+64], {%r15, %r16, %r17, %r18};
	st.v4.f32 	[%rd36+48], {%f39, %f40, %f41, %f42};
	st.v4.f32 	[%rd36+32], {%f35, %f36, %f37, %f38};
	st.v4.f32 	[%rd36+16], {%f31, %f32, %f33, %f34};
	st.v4.f32 	[%rd36], {%f27, %f28, %f29, %f30};
	ret;
}


